{
  "nodes": [
    {
      "parameters": {
        "content": "## LinkedIn\n- search by keyword(s)\n- filter by date\n- sort by popularity\n- run sentiment analysis\n-- what makes it work\n-- virality factors\n-- similar content ideas\n-- comments\nhttps://rapidapi.com/karimgreek/api/linkedin-data-scraper-api1/playground/apiendpoint_94fa3e7d-d557-4522-88d1-d99adc622622\n\n## Instagram\n- search by user\n- filter by date\n- run sentiment analysis..etc etc\nhttps://rapidapi.com/premium-apis-oanor/api/instagram-scraper21/playground/apiendpoint_8689d1e3-6999-44c5-907f-c88018959484\n\n## Tiktok\n- search by keyword(s)\n- filter by date\n- sort by popularity\n- run sentiment analysis\n-- what makes it work\n-- virality factors\n-- similar content ideas\n-- comments\nhttps://rapidapi.com/Lundehund/api/tiktok-api23/playground/apiendpoint_321f8dd4-f660-49a8-8ba1-bbf1beb830de\n\nhttps://console.apify.com/actors/GdWCkxBtKWOsKjdch/input",
        "height": 680,
        "width": 1220
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3104,
        -496
      ],
      "typeVersion": 1,
      "id": "473a1bc0-90cc-47a7-a49a-370ad585ee7d",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "url": "=https://instagram-scraper21.p.rapidapi.com/api/v1/post-info",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "code",
              "value": "={{ $json.code }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-rapidapi-host",
              "value": "instagram-scraper21.p.rapidapi.com"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        272,
        96
      ],
      "id": "64b5b527-1ce1-4794-83e5-d3391393342d",
      "name": "HTTP Request",
      "credentials": {
        "httpHeaderAuth": {
          "id": "jPSCNxRrEsUYRID7",
          "name": "RapidAPI"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const manifest = $input.first().json.data.post.dash_info.video_dash_manifest;\n\n// Extract the <AdaptationSet> with contentType=\"audio\"\nconst audioAdaptationSetMatch = manifest.match(/<AdaptationSet[^>]*contentType=\"audio\"[^>]*>[\\s\\S]*?<\\/AdaptationSet>/);\n\nif (!audioAdaptationSetMatch) {\n  return [{ json: { error: \"Audio AdaptationSet not found\" } }];\n}\n\n// Extract <BaseURL> within the audio section\nconst baseUrlMatch = audioAdaptationSetMatch[0].match(/<BaseURL>(.*?)<\\/BaseURL>/);\n\nif (!baseUrlMatch || !baseUrlMatch[1]) {\n  return [{ json: { error: \"BaseURL not found in audio AdaptationSet\" } }];\n}\n\n// Decode HTML entities like &amp;\nconst decodedUrl = baseUrlMatch[1].replace(/&amp;/g, '&');\n\nreturn [\n  {\n    json: {\n      audio_url: decodedUrl\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        528,
        96
      ],
      "id": "27f3539c-a347-411b-bd4e-2826c621bbdd",
      "name": "Code1"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1120,
        96
      ],
      "id": "9995023f-19a4-4eaa-9e65-e055a10da7b9",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "ybRg3lag38rmtn5D",
          "name": "Shab OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.audio_url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        800,
        96
      ],
      "id": "64741884-5ed0-47a1-818c-d20fc248c369",
      "name": "HTTP Request1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -2800,
        720
      ],
      "id": "9b14240c-4c91-4905-865c-68d6440705ee",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "app7GtQRtd1vnFEdW",
          "mode": "list",
          "cachedResultName": "Social Automation",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW"
        },
        "table": {
          "__rl": true,
          "value": "tbl7UBjpcmrSOBJPu",
          "mode": "list",
          "cachedResultName": "Inspiration",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW/tbl7UBjpcmrSOBJPu"
        },
        "filterByFormula": "AND({Platform} = \"Instagram\", {Status} = \"Listening\")",
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        -1392,
        -32
      ],
      "id": "e35f0398-081f-4b59-9a4e-cefe9ba1c0a2",
      "name": "Search records",
      "credentials": {
        "airtableTokenApi": {
          "id": "zWLJcCryxTdKGkUW",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://instagram-scraper21.p.rapidapi.com/api/v1/posts",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "username",
              "value": "={{ $json['Keyword or User'] }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-rapidapi-host",
              "value": "instagram-scraper21.p.rapidapi.com"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1168,
        -32
      ],
      "id": "dbfc6595-8bcf-4a01-9d85-6bddae942a11",
      "name": "HTTP Request3",
      "credentials": {
        "httpHeaderAuth": {
          "id": "jPSCNxRrEsUYRID7",
          "name": "RapidAPI"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "data.posts",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -944,
        -32
      ],
      "id": "dea3a21a-d575-4ab9-afb0-fad0c06122c3",
      "name": "Split Out"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a52cb3f1-0178-4056-999c-ef49fd7abef0",
              "leftValue": "={{ new Date($json[\"created_at_human_readable\"]) }}",
              "rightValue": "={{ new Date(Date.now() - 7 * 24 * 60 * 60 * 1000) }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -720,
        -32
      ],
      "id": "f0f51cc6-4032-41e3-b1e1-e5382ecc5c11",
      "name": "Filter"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2573d92e-e6bd-4f3d-a47e-4ef846b9c7b6",
              "leftValue": "={{ $json.like_count }}",
              "rightValue": "={{ $('Search records').item.json['Minimum Like/View Count'] }}",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -496,
        -32
      ],
      "id": "77c6fb65-8a43-4cde-ba0e-cafbebe2fc07",
      "name": "Filter1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.product_type }}",
                    "rightValue": "carousel_container",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "4d20b6d1-d68b-4012-b015-155c74c70e1e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Carousel"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "56fd3192-a2cd-441d-b49e-d37aff16c92c",
                    "leftValue": "={{ $json.product_type }}",
                    "rightValue": "clips",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Reels"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -272,
        -32
      ],
      "id": "4fca0ff8-8985-4c29-a406-166d36375a4c",
      "name": "Switch"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -48,
        224
      ],
      "id": "45a4ba14-7d51-46a0-a8ba-5dc16aa6ed45",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Viral Social Media Content Analysis Prompt\nSystem Instructions\nYou are an expert social media content analyst specializing in viral content patterns. Your task is to analyze social media posts across multiple dimensions and provide actionable framework suggestions.\nInput Data\n\nCaption: {{ $json.caption }}\nScript: {{ $json.script }}\n\nAnalysis Framework\nRequired Analysis Dimensions\n\nEmotional Resonance\n\nPrimary emotion triggered (joy, surprise, anger, fear, sadness, disgust, trust, anticipation)\nEmotional intensity (1-10 scale)\nEmotional journey/arc throughout the content\nRelatability factor\n\n\nContent Structure & Hook\n\nOpening hook effectiveness\nNarrative structure (story arc, problem-solution, revelation, etc.)\nPacing and rhythm\nCall-to-action strength\n\n\nEngagement Mechanics\n\nShareability factors\nComment-driving elements\nViral triggers (controversy, humor, relatability, shock, utility)\nCommunity-building potential\n\n\nTrend Alignment\n\nCurrent trend participation\nTrending audio/format usage\nHashtag strategy effectiveness\nPlatform-specific optimization\n\n\nAuthenticity & Voice\n\nPerceived authenticity level\nPersonal brand alignment\nUnique value proposition\nAudience connection strength\n\n\nProduction Quality\n\nVisual/audio production value\nContent clarity and coherence\nTechnical execution\nProfessional vs. organic feel\n\n\n\nOutput Requirements\nProvide your analysis in this simplified JSON structure for easy Airtable mapping:\n\n```json\n{\n  \"viral_score\": \"number (1-100)\",\n  \"primary_strengths\": \"string (comma-separated top 3 strengths)\",\n  \"framework_1\": \"Framework Name: Brief description and key implementation step\",\n  \"framework_2\": \"Framework Name: Brief description and key implementation step\", \n  \"framework_3\": \"Framework Name: Brief description and key implementation step\"\n}\n```\n\nFramework Selection Guidelines\nChoose frameworks from these categories based on the content analysis:\nContent Creation Frameworks\n\nProblem-Agitation-Solution (PAS): For educational/solution-oriented content\nBefore-After-Bridge (BAB): For transformation content\nStory-Lesson-Call to Action: For narrative-driven content\nHook-Value-Proof: For educational/authority content\n\nEngagement Frameworks\n\nControversy-Clarity-Community: For discussion-driving content\nTrend-Twist-Amplify: For trend-based content\nPersonal-Universal-Actionable: For relatable content\nQuestion-Journey-Resolution: For mystery/curiosity content\n\nViral Mechanics Frameworks\n\nEmotional-Shareable-Memorable: For highly viral content\nNiche-Specific-Scalable: For community-building content\nVisual-Audio-Text Trinity: For multi-sensory content\nAuthentic-Aspirational-Accessible: For lifestyle content\n\nAdditional Instructions\n\nViral Score: Rate 1-100 based on overall viral potential considering all dimensions\nPrimary Strengths: Identify the top 3 most impactful elements with brief explanations of why they work (e.g., \"Strong emotional hook (creates immediate connection), trending audio (boosts algorithm reach), relatable story (drives comments)\")\nFramework Format: Each framework should be: \"Name: 1-2 sentence description + one key action step\"\nConcise Output: Keep framework fields under 200 characters, primary strengths can be up to 300 characters for explanations\nActionable Focus: Prioritize immediately implementable insights over theoretical analysis\n\n## Example Output Format:\n```json\n{\n  \"viral_score\": \"78\",\n  \"primary_strengths\": \"Emotional storytelling, trending format, strong hook\",\n  \"framework_1\": \"Problem-Solution Framework: Opens with relatable problem, builds tension, provides clear solution. Action: Start with 'Have you ever...' question\",\n  \"framework_2\": \"Trend-Twist Strategy: Uses trending audio with unique spin. Action: Apply your personal story to current trending sound\",\n  \"framework_3\": \"Community-Building Arc: Encourages sharing experiences. Action: End with 'Comment your experience below'\"\n}\n```",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1424,
        96
      ],
      "id": "b19a084b-d233-4699-8997-93d2108c2236",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"viral_score\": \"78\",\n  \"primary_strengths\": \"Emotional storytelling, trending format, strong hook\",\n  \"framework_1\": \"Problem-Solution Framework: Opens with relatable problem, builds tension, provides clear solution. Action: Start with 'Have you ever...' question\",\n  \"framework_2\": \"Trend-Twist Strategy: Uses trending audio with unique spin. Action: Apply your personal story to current trending sound\",\n  \"framework_3\": \"Community-Building Arc: Encourages sharing experiences. Action: End with 'Comment your experience below'\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1520,
        320
      ],
      "id": "0bacea58-f270-41f2-9382-3e9c0c1bfbdf",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "app7GtQRtd1vnFEdW",
          "mode": "list",
          "cachedResultName": "Social Automation",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW"
        },
        "table": {
          "__rl": true,
          "value": "tbla6GNwPXjx0yalQ",
          "mode": "list",
          "cachedResultName": "Instagram Ideas",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW/tbla6GNwPXjx0yalQ"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Post ID": "={{ $('HTTP Request').item.json.data.post.shortcode }}",
            "Post Type": "Reel",
            "Caption": "={{ $('HTTP Request').item.json.data.post.edge_media_to_caption.edges[0].node.text }}",
            "Script": "={{ $('OpenAI').item.json.text }}",
            "Viral Score": "={{ $json.output.viral_score }}",
            "Primary Strengths": "={{ $json.output.primary_strengths }}",
            "Idea Framework 1": "={{ $json.output.framework_1 }}",
            "Idea Framework 2": "={{ $json.output.framework_2 }}",
            "Idea Framework 3": "={{ $json.output.framework_3 }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Post ID",
              "displayName": "Post ID",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Post Type",
              "displayName": "Post Type",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Reel",
                  "value": "Reel"
                },
                {
                  "name": "Carousel",
                  "value": "Carousel"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Number of Slides",
              "displayName": "Number of Slides",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Caption",
              "displayName": "Caption",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Script",
              "displayName": "Script",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Viral Score",
              "displayName": "Viral Score",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Primary Strengths",
              "displayName": "Primary Strengths",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Idea Framework 1",
              "displayName": "Idea Framework 1",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Idea Framework 2",
              "displayName": "Idea Framework 2",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Idea Framework 3",
              "displayName": "Idea Framework 3",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        1920,
        224
      ],
      "id": "29144708-e8ed-49dc-834b-6a2a8235801c",
      "name": "Create a record",
      "credentials": {
        "airtableTokenApi": {
          "id": "zWLJcCryxTdKGkUW",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://instagram-scraper21.p.rapidapi.com/api/v1/post-info",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "code",
              "value": "={{ $json.code }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-rapidapi-host",
              "value": "instagram-scraper21.p.rapidapi.com"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        272,
        -400
      ],
      "id": "ee706e45-4f93-4cc7-a5be-0160ad457bb7",
      "name": "HTTP Request2",
      "credentials": {
        "httpHeaderAuth": {
          "id": "jPSCNxRrEsUYRID7",
          "name": "RapidAPI"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -48,
        -272
      ],
      "id": "45595b08-4a33-4cd6-8be8-2869d4ee80c9",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "chatgpt-4o-latest",
          "mode": "list",
          "cachedResultName": "CHATGPT-4O-LATEST"
        },
        "text": "What's the text in this image?\n\nAnd how is the image designed(eg is it a tweet, a post-it, so on)",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        800,
        -400
      ],
      "id": "21335586-6a71-4c6b-a4c5-73e5a4dd8b7b",
      "name": "Analyze image",
      "credentials": {
        "openAiApi": {
          "id": "ybRg3lag38rmtn5D",
          "name": "Shab OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.data.post.thumbnail_src }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        576,
        -400
      ],
      "id": "2cb7f315-a60d-461c-b0ec-40108a0cd087",
      "name": "HTTP Request4"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "chatgpt-4o-latest",
          "mode": "list",
          "cachedResultName": "CHATGPT-4O-LATEST"
        },
        "messages": {
          "values": [
            {
              "content": "={{ $json.content }}\n\nRedo this output as\n\n{\n\"text_from_image\": \"text\",\n\"design\": \"one-two word description of design(Tweet, Post-it, etc)\"\n}"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1024,
        -400
      ],
      "id": "80e603e8-e078-4583-9310-c56bb4f8a8a3",
      "name": "Message a model",
      "credentials": {
        "openAiApi": {
          "id": "ybRg3lag38rmtn5D",
          "name": "Shab OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Access the array\nconst edges = $('HTTP Request2').first().json.data.post.edge_sidecar_to_children.edges\n\n// Count the number of items\nconst count = edges.length;\n\nreturn [\n  {\n    json: {\n      length: count\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1472,
        -400
      ],
      "id": "4dc1bafc-fba3-4ff2-aed1-4fdb5c62c4ba",
      "name": "Code"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=# Carousel Post Analysis Prompt\n\n## System Instructions\nYou are an expert social media content analyst specializing in carousel post optimization. Your task is to analyze carousel posts across multiple dimensions and provide actionable framework suggestions for maximum engagement and virality.\n\n## Input Data\n- **First Image Text**: {{ $('Message a model').item.json.message.content.text_from_image }}\n- **Design Style**: {{ $('Message a model').item.json.message.content.design }}\n- **Caption**: {{ $('HTTP Request4').item.json.data.post.edge_media_to_caption.edges[0].node.text }}\n- **Number of Carousel Images**: {{ $json.length }}\n\n## Analysis Framework\n\n### Required Analysis Dimensions\n\n1. **Hook & First Impression**\n   - First image/slide effectiveness as scroll-stopper\n   - Visual hierarchy and readability\n   - Curiosity gap creation\n   - Value proposition clarity\n\n2. **Carousel Flow & Structure**\n   - Logical content progression\n   - Optimal slide count utilization\n   - Information density per slide\n   - Story arc development across slides\n\n3. **Visual Design & Consistency**\n   - Design cohesiveness across slides\n   - Brand alignment and recognition\n   - Color psychology and contrast\n   - Typography effectiveness and readability\n\n4. **Engagement Optimization**\n   - Swipe-through motivation\n   - Educational value delivery\n   - Shareability factors\n   - Comment-driving elements\n\n5. **Platform Mechanics**\n   - Carousel-specific algorithm factors\n   - Completion rate optimization\n   - Caption-carousel synergy\n   - Hashtag strategy effectiveness\n\n6. **Content Value & Authority**\n   - Educational/entertainment balance\n   - Expertise demonstration\n   - Actionable takeaways\n   - Unique insight provision\n\n## Output Requirements\n\nProvide your analysis in this simplified JSON structure for easy Airtable mapping:\n\n```json\n{\n  \"carousel_score\": \"number (1-100)\",\n  \"primary_strengths\": \"string (top 3 strengths with explanations of why they work effectively)\",\n  \"framework_1\": \"Framework Name: Brief description and key implementation step\",\n  \"framework_2\": \"Framework Name: Brief description and key implementation step\", \n  \"framework_3\": \"Framework Name: Brief description and key implementation step\"\n}\n```\n\n## Framework Selection Guidelines\n\nChoose frameworks from these carousel-specific categories based on the content analysis:\n\n### Carousel Structure Frameworks\n- **Hook-Educate-CTA Flow**: Strong opener, educational middle, action closer\n- **Problem-Steps-Result Arc**: Issue identification, solution breakdown, outcome showcase\n- **Before-During-After Journey**: Transformation storytelling across slides\n- **Question-Answer-Proof Sequence**: Curiosity-driven educational content\n\n### Engagement Frameworks\n- **Teaser-Reveal-Bonus Pattern**: Build anticipation, deliver value, surprise ending\n- **List-Expand-Summarize Method**: Overview slide, detailed breakdowns, recap\n- **Story-Lesson-Application Flow**: Narrative hook, insight delivery, practical use\n- **Challenge-Solution-Action Framework**: Problem presentation, resolution steps, implementation\n\n### Visual Design Frameworks\n- **Consistent-Progressive-Surprise Design**: Cohesive branding with visual evolution\n- **Minimal-Focused-Impactful Style**: Clean design emphasizing key messages\n- **Branded-Professional-Accessible Look**: Authority building with approachability\n- **Color-Coded-Hierarchical System**: Visual organization for easy consumption\n\n### Viral Mechanics Frameworks\n- **Scroll-Stop-Save-Share Optimization**: Maximum engagement at each stage\n- **Educational-Entertaining-Memorable Mix**: Balanced value delivery\n- **Personal-Universal-Actionable Content**: Relatable yet broadly applicable\n- **Authority-Approachable-Authentic Voice**: Expert positioning with human connection\n\n## Additional Instructions\n\n1. **Carousel Score**: Rate 1-100 based on overall effectiveness considering slide count optimization, visual flow, and engagement potential\n2. **Primary Strengths**: Identify the top 3 most impactful elements with brief explanations of why they work effectively for carousel format (e.g., \"Strong visual hook (stops scroll immediately), logical flow (encourages full swipe-through), actionable tips (drives saves)\")\n3. **Framework Format**: Each framework should be: \"Name: 1-2 sentence description + one key action step specific to carousel optimization\"\n4. **Concise Output**: Keep framework fields under 200 characters, primary strengths can be up to 300 characters for explanations\n5. **Carousel-Specific Focus**: Prioritize insights unique to carousel format over general social media advice\n\n## Carousel-Specific Considerations\n\n### Slide Count Optimization\n- **3-5 slides**: Quick consumption, perfect for tips/steps\n- **6-8 slides**: Detailed education, story development\n- **9-10 slides**: Comprehensive guides, in-depth tutorials\n- **10+ slides**: Risk of drop-off, needs exceptional content\n\n### Engagement Patterns\n- **Slide 1**: Must stop scroll and create curiosity\n- **Slides 2-X**: Deliver promised value progressively\n- **Final slide**: Strong CTA, summary, or bonus content\n- **Caption synergy**: Should complement, not repeat carousel content\n\n### Visual Flow Principles\n- **Consistent branding**: Color scheme, fonts, layout style\n- **Progressive revelation**: Build complexity or excitement\n- **Visual breaks**: Avoid information overload per slide\n- **Mobile optimization**: Ensure readability on small screens\n\n## Example Output Format:\n```json\n{\n  \"carousel_score\": \"85\",\n  \"primary_strengths\": \"Compelling first slide hook (creates immediate curiosity gap), optimal 7-slide structure (perfect length for educational content), consistent visual branding (builds recognition and professionalism)\",\n  \"framework_1\": \"Hook-Educate-CTA Flow: Strong opener creates curiosity, middle slides deliver value, final slide drives action. Action: Lead with surprising statistic or question\",\n  \"framework_2\": \"Progressive Reveal Pattern: Each slide builds on previous knowledge. Action: End each slide with transition teaser to next\",\n  \"framework_3\": \"Visual Hierarchy System: Consistent design with clear information flow. Action: Use same header style and color coding throughout\"\n}\n```\n\n## Quality Checks\n\nBefore finalizing your response:\n- ✅ Analysis considers carousel-specific engagement patterns\n- ✅ Slide count is factored into optimization recommendations  \n- ✅ Visual flow and design consistency are evaluated\n- ✅ Frameworks are tailored to carousel format strengths\n- ✅ Actionable insights are specific to multi-slide content",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1824,
        -400
      ],
      "id": "383c4085-9684-4518-b7f7-b683fd734e20",
      "name": "Basic LLM Chain1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1472,
        736
      ],
      "id": "ccbdcfa2-3fa9-40f3-93f5-7f86b9f18d7d",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "ybRg3lag38rmtn5D",
          "name": "Shab OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"carousel_score\": \"85\",\n  \"primary_strengths\": \"Compelling first slide hook (creates immediate curiosity gap), optimal 7-slide structure (perfect length for educational content), consistent visual branding (builds recognition and professionalism)\",\n  \"framework_1\": \"Hook-Educate-CTA Flow: Strong opener creates curiosity, middle slides deliver value, final slide drives action. Action: Lead with surprising statistic or question\",\n  \"framework_2\": \"Progressive Reveal Pattern: Each slide builds on previous knowledge. Action: End each slide with transition teaser to next\",\n  \"framework_3\": \"Visual Hierarchy System: Consistent design with clear information flow. Action: Use same header style and color coding throughout\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1984,
        -176
      ],
      "id": "3dc6c5fe-82a0-492a-a3c2-26899b88260f",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "app7GtQRtd1vnFEdW",
          "mode": "list",
          "cachedResultName": "Social Automation",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW"
        },
        "table": {
          "__rl": true,
          "value": "tbla6GNwPXjx0yalQ",
          "mode": "list",
          "cachedResultName": "Instagram Ideas",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW/tbla6GNwPXjx0yalQ"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Post ID": "={{ $('HTTP Request2').item.json.data.post.shortcode }}",
            "Post Type": "Carousel",
            "Caption": "={{ $('HTTP Request2').item.json.data.post.edge_media_to_caption.edges[0].node.text }}",
            "Script": "={{ $('Message a model').item.json.message.content.text_from_image }}",
            "Viral Score": "={{ $json.output.carousel_score }}",
            "Primary Strengths": "={{ $json.output.primary_strengths }}",
            "Idea Framework 1": "={{ $json.output.framework_1 }}",
            "Idea Framework 2": "={{ $json.output.framework_2 }}",
            "Idea Framework 3": "={{ $json.output.framework_3 }}",
            "Number of Slides": "={{ $('Code').item.json.length }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Post ID",
              "displayName": "Post ID",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Post Type",
              "displayName": "Post Type",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Reel",
                  "value": "Reel"
                },
                {
                  "name": "Carousel",
                  "value": "Carousel"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Number of Slides",
              "displayName": "Number of Slides",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Caption",
              "displayName": "Caption",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Script",
              "displayName": "Script",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Viral Score",
              "displayName": "Viral Score",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Primary Strengths",
              "displayName": "Primary Strengths",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Idea Framework 1",
              "displayName": "Idea Framework 1",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Idea Framework 2",
              "displayName": "Idea Framework 2",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Idea Framework 3",
              "displayName": "Idea Framework 3",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        2224,
        -272
      ],
      "id": "20a814ec-2da5-40d3-a697-a8af7d28a704",
      "name": "Create a record1",
      "credentials": {
        "airtableTokenApi": {
          "id": "zWLJcCryxTdKGkUW",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Instagram Research\n### Analyze Reels and Carousel Posts",
        "height": 1016,
        "width": 4040,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1648,
        -544
      ],
      "typeVersion": 1,
      "id": "96febc92-9f67-4eec-a1b6-bc00f33409e7",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "dd45db54-efb3-4b7a-a78b-13e197e362f8",
              "leftValue": "={{ $json.stats.total_reactions }}",
              "rightValue": "={{ $('Search records3').item.json['Minimum Like Count'] }}",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -208,
        720
      ],
      "id": "d3995ac6-52d1-4b0b-a9ac-19b0cda6b248",
      "name": "Filter2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=# LinkedIn Post Analysis Prompt\n\n## System Instructions\nYou are an expert LinkedIn content strategist specializing in professional engagement and thought leadership. Your task is to analyze LinkedIn posts across multiple dimensions and provide actionable framework suggestions for maximum professional impact and reach.\n\n## Input Data\n- **Post Text**: {{ $('Filter2').item.json.text }}\n- **Author Info**: {{ $('Filter2').item.json.author.name }} - {{ $('Filter2').item.json.author.headline }}\n- **Content Type**: {{ $('Filter2').item.json.content.type }}\n- **Engagement Stats**: {{ $('Filter2').item.json.stats.total_reactions }} reactions,  {{ $('Filter2').item.json.stats.comments }} comments, {{ $('Filter2').item.json.stats.shares }} shares\n- **Hashtags**: {{ $('Filter2').item.json.hashtags }}\n\n## Analysis Framework\n\n### Required Analysis Dimensions\n\n1. **Professional Hook & Value Proposition**\n   - Opening line effectiveness for LinkedIn feed\n   - Professional relevance and industry insight\n   - Value delivery to target audience\n   - Thought leadership positioning\n\n2. **Content Structure & Readability**\n   - LinkedIn-optimized formatting (line breaks, emojis, bold text)\n   - Information hierarchy and scanability\n   - Story arc and narrative flow\n   - Call-to-action effectiveness\n\n3. **Professional Authority & Credibility**\n   - Industry expertise demonstration\n   - Data and evidence usage\n   - Personal brand alignment\n   - Unique perspective delivery\n\n4. **LinkedIn Algorithm Optimization**\n   - Engagement-driving elements (questions, controversial takes, polls)\n   - Comment-generating strategies\n   - Share-worthy professional insights\n   - Platform-specific best practices\n\n5. **Network Building & Community**\n   - Professional networking facilitation\n   - Industry conversation starting\n   - Collaborative opportunities creation\n   - Relationship building potential\n\n6. **Business Impact & Objectives**\n   - Lead generation potential\n   - Brand awareness building\n   - Expertise positioning\n   - Career/business advancement value\n\n## Output Requirements\n\nProvide your analysis in this simplified JSON structure for easy Airtable mapping:\n\n```json\n{\n  \"linkedin_score\": \"number (1-100)\",\n  \"primary_strengths\": \"string (top 3 strengths with explanations of why they work for LinkedIn professionals)\",\n  \"framework_1\": \"Framework Name: Brief description and key implementation step\",\n  \"framework_2\": \"Framework Name: Brief description and key implementation step\", \n  \"framework_3\": \"Framework Name: Brief description and key implementation step\"\n}\n```\n\n## Framework Selection Guidelines\n\nChoose frameworks from these LinkedIn-specific categories based on the content analysis:\n\n### Professional Content Frameworks\n- **Problem-Insight-Solution (PIS)**: Industry challenge identification, expert analysis, actionable solution\n- **Story-Lesson-Application (SLA)**: Professional narrative, key learning, practical implementation\n- **Data-Analysis-Prediction (DAP)**: Industry stats, expert interpretation, future implications\n- **Experience-Reflection-Advice (ERA)**: Personal journey, insights gained, professional guidance\n\n### Engagement Frameworks\n- **Question-Context-Discussion Starter**: Thought-provoking question, background context, community engagement\n- **Contrarian-Evidence-Debate**: Challenging conventional wisdom with supporting data\n- **Trend-Impact-Opportunity**: Industry trend analysis with business implications\n- **Personal-Professional-Universal**: Individual experience with broader professional relevance\n\n### Authority Building Frameworks\n- **Research-Interpretation-Implication**: Latest findings, expert analysis, industry impact\n- **Behind-the-Scenes-Insight**: Internal perspective, professional learning, industry knowledge\n- **Case-Study-Breakdown**: Real example analysis, success factors, replicable strategies\n- **Future-Vision-Preparation**: Industry predictions, strategic thinking, actionable preparation\n\n### Network Building Frameworks\n- **Recognition-Collaboration-Growth**: Acknowledging others, partnership opportunities, mutual development\n- **Industry-Connect-Value**: Sector insights, professional networking, value exchange\n- **Mentor-Share-Inspire**: Leadership perspective, knowledge sharing, community motivation\n- **Challenge-Solve-Together**: Industry problem, collaborative solution, team approach\n\n## LinkedIn-Specific Considerations\n\n### Content Type Optimization\n- **Text Posts**: Focus on storytelling and insights\n- **Image Posts**: Visual + professional commentary\n- **Video Posts**: Educational or behind-the-scenes content\n- **Document Posts**: In-depth guides and resources\n- **Poll Posts**: Community engagement and data gathering\n\n### Professional Formatting\n- **Opening Hook**: First 2 lines crucial for feed visibility\n- **White Space**: Line breaks for mobile readability\n- **Visual Elements**: Strategic emoji and formatting use\n- **Hashtag Strategy**: 3-5 industry-relevant hashtags maximum\n- **CTA Placement**: Natural integration within professional context\n\n### Engagement Patterns\n- **Professional Questions**: Industry-specific, thought-provoking\n- **Industry Insights**: Unique perspective on market trends\n- **Personal Professional Stories**: Relatable career experiences\n- **Educational Content**: Skill-building and knowledge sharing\n- **Network Recognition**: Tagging and acknowledging peers\n\n## Additional Instructions\n\n1. **LinkedIn Score**: Rate 1-100 based on professional impact, engagement potential, and algorithm optimization for LinkedIn's unique audience\n2. **Primary Strengths**: Identify the top 3 most impactful elements with brief explanations of why they work effectively for LinkedIn professionals (e.g., \"Strong industry hook (captures professional attention), data-driven insights (builds credibility), engaging question (drives meaningful comments)\")\n3. **Framework Format**: Each framework should be: \"Name: 1-2 sentence description + one key action step specific to LinkedIn professional engagement\"\n4. **Concise Output**: Keep framework fields under 200 characters, primary strengths can be up to 300 characters for explanations\n5. **Professional Focus**: Prioritize business value, career advancement, and professional networking over entertainment\n\n## Example Output Format:\n```json\n{\n  \"linkedin_score\": \"82\",\n  \"primary_strengths\": \"Compelling industry hook (immediately relevant to target professionals), data-backed insights (establishes credibility and expertise), thought-provoking question (generates meaningful professional discussion)\",\n  \"framework_1\": \"Problem-Insight-Solution Framework: Identifies industry challenge, provides expert analysis, offers actionable steps. Action: Open with current industry pain point\",\n  \"framework_2\": \"Authority-Building Pattern: Demonstrates expertise through data and unique perspective. Action: Include specific metrics or research findings\",\n  \"framework_3\": \"Community-Discussion Starter: Ends with engaging question that drives professional conversation. Action: Ask about others' experiences or opinions\"\n}\n```\n\n## Quality Checks\n\nBefore finalizing your response:\n- ✅ Analysis considers LinkedIn's professional audience and business context\n- ✅ Engagement patterns are tailored to professional networking goals\n- ✅ Authority building and thought leadership elements are evaluated\n- ✅ Frameworks focus on business impact and career advancement\n- ✅ Recommendations align with LinkedIn algorithm and best practices",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        384,
        592
      ],
      "id": "435266c9-133f-4890-b5a7-b1a5b7bf98e2",
      "name": "Basic LLM Chain2"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"linkedin_score\": \"82\",\n  \"primary_strengths\": \"Compelling industry hook (immediately relevant to target professionals), data-backed insights (establishes credibility and expertise), thought-provoking question (generates meaningful professional discussion)\",\n  \"framework_1\": \"Problem-Insight-Solution Framework: Identifies industry challenge, provides expert analysis, offers actionable steps. Action: Open with current industry pain point\",\n  \"framework_2\": \"Authority-Building Pattern: Demonstrates expertise through data and unique perspective. Action: Include specific metrics or research findings\",\n  \"framework_3\": \"Community-Discussion Starter: Ends with engaging question that drives professional conversation. Action: Ask about others' experiences or opinions\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        480,
        816
      ],
      "id": "949af4f2-c8a7-4a15-bb1a-1bdbeb042d31",
      "name": "Structured Output Parser2"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "app7GtQRtd1vnFEdW",
          "mode": "list",
          "cachedResultName": "Social Automation",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW"
        },
        "table": {
          "__rl": true,
          "value": "tblHfwIJxk5aJllTO",
          "mode": "list",
          "cachedResultName": "LinkedIn Ideas",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW/tblHfwIJxk5aJllTO"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Post URL": "={{ $('Loop Over Items2').item.json.post_url }}",
            "User": "={{ $('Loop Over Items2').item.json.author.name }}",
            "Reactions": "={{ $('Loop Over Items2').item.json.stats.total_reactions }}",
            "Content": "={{ $('Loop Over Items2').item.json.text }}",
            "Hashtags": "={{ $('Loop Over Items2').item.json.hashtags.join(', ') }}",
            "LinkedIn Score": "={{ $json.output.linkedin_score }}",
            "Primary Strengths": "={{ $json.output.primary_strengths }}",
            "Framework 1": "={{ $json.output.framework_1 }}",
            "Framework 2": "={{ $json.output.framework_2 }}",
            "Framework 3": "={{ $json.output.framework_3 }}",
            "Post Type": "={{ $('Loop Over Items2').item.json.content.type === 'video' ? 'Video' : 'Text' }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Post URL",
              "displayName": "Post URL",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "User",
              "displayName": "User",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Reactions",
              "displayName": "Reactions",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Post Type",
              "displayName": "Post Type",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Video",
                  "value": "Video"
                },
                {
                  "name": "Text",
                  "value": "Text"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Content",
              "displayName": "Content",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Hashtags",
              "displayName": "Hashtags",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "LinkedIn Score",
              "displayName": "LinkedIn Score",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Primary Strengths",
              "displayName": "Primary Strengths",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Framework 1",
              "displayName": "Framework 1",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Framework 2",
              "displayName": "Framework 2",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Framework 3",
              "displayName": "Framework 3",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Selected Framework",
              "displayName": "Selected Framework",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Framework 1",
                  "value": "Framework 1"
                },
                {
                  "name": "Framework 2",
                  "value": "Framework 2"
                },
                {
                  "name": "Framework 3",
                  "value": "Framework 3"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Generate Content",
                  "value": "Generate Content"
                },
                {
                  "name": "Reject",
                  "value": "Reject"
                }
              ],
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        784,
        720
      ],
      "id": "236c7387-16f6-4dee-b008-835f2bd0f95c",
      "name": "Create a record2",
      "credentials": {
        "airtableTokenApi": {
          "id": "zWLJcCryxTdKGkUW",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        160,
        720
      ],
      "id": "4de82a3b-71c4-4608-8c12-144fc33a73b6",
      "name": "Loop Over Items2"
    },
    {
      "parameters": {
        "content": "## LinkedIn Research",
        "height": 404,
        "width": 2552,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1696,
        512
      ],
      "typeVersion": 1,
      "id": "18582fbf-25d1-4c79-a5bd-8bdf4ac447bb",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "app7GtQRtd1vnFEdW",
          "mode": "list",
          "cachedResultName": "Social Automation",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW"
        },
        "table": {
          "__rl": true,
          "value": "tbl7UBjpcmrSOBJPu",
          "mode": "list",
          "cachedResultName": "Inspiration",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW/tbl7UBjpcmrSOBJPu"
        },
        "filterByFormula": "AND({Platform} = \"Tiktok\", {Status} = \"Listening\")",
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        -1392,
        1136
      ],
      "id": "d9a42d4c-4bcb-4abe-ae57-ddd48d162ca8",
      "name": "Search records2",
      "credentials": {
        "airtableTokenApi": {
          "id": "zWLJcCryxTdKGkUW",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://tiktok-api23.p.rapidapi.com/api/music/info",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "musicId",
              "value": "={{ $json.musicMeta.musicId }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-rapidapi-host",
              "value": "tiktok-api23.p.rapidapi.com"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        576,
        1008
      ],
      "id": "f4bda1ca-6f9d-41f0-9c45-f005d8487dfa",
      "name": "HTTP Request7",
      "credentials": {
        "httpHeaderAuth": {
          "id": "jPSCNxRrEsUYRID7",
          "name": "RapidAPI"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        272,
        1136
      ],
      "id": "2ceac8dd-961b-4369-a29b-20383c26fe45",
      "name": "Loop Over Items3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "15411a27-1a37-4637-a0f1-4e3dfba1d7ee",
              "leftValue": "={{ $json.musicMeta.musicName }}",
              "rightValue": "original sound",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -48,
        1136
      ],
      "id": "e250e964-4536-4d16-850b-4c9e43174c7f",
      "name": "Filter4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d7f9b42e-de2b-4b25-abec-c98ad29ce84b",
              "leftValue": "={{ $json.playCount }}",
              "rightValue": "={{ Number($('Search records2').item.json['Minimum Like Count']) }}",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -272,
        1136
      ],
      "id": "75501ca3-3ea5-44ba-87e9-7858326a80de",
      "name": "Filter5"
    },
    {
      "parameters": {
        "url": "={{ $json.data.musicInfo.music.playUrl }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        800,
        1008
      ],
      "id": "fdbe824a-99b9-4f29-b896-43028ddca96b",
      "name": "HTTP Request8"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "/tmp/audio.mp4",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1120,
        1008
      ],
      "id": "47fc36e4-8d4d-43ca-b301-1cb1ff9bfeb3",
      "name": "Read/Write Files from Disk"
    },
    {
      "parameters": {
        "fileSelector": "/tmp/*",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1520,
        1008
      ],
      "id": "91e3225e-d174-4e12-99a9-bb942cafb453",
      "name": "Read/Write Files from Disk1"
    },
    {
      "parameters": {
        "command": "ffmpeg -i /tmp/audio.mp4 -vn -acodec libmp3lame -q:a 4 /tmp/converted_audio.mp3"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1920,
        1008
      ],
      "id": "dd996ceb-0e46-4120-91a7-13e32da9570c",
      "name": "Execute Command"
    },
    {
      "parameters": {
        "fileSelector": "/tmp/*.mp3",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2224,
        1008
      ],
      "id": "e9362be3-150a-480e-ae85-c893844e8e43",
      "name": "Read/Write Files from Disk2"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {
          "language": "en"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2448,
        1008
      ],
      "id": "843d0fca-f804-4185-94e2-20a9565d41c4",
      "name": "Transcribe a recording",
      "credentials": {
        "openAiApi": {
          "id": "ybRg3lag38rmtn5D",
          "name": "Shab OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=# TikTok Video Analysis Prompt\n\n## System Instructions\nYou are an expert TikTok content strategist specializing in viral mechanics and algorithm optimization. Your task is to analyze TikTok videos across multiple dimensions and provide actionable framework suggestions for maximum reach, engagement, and viral potential.\n\n## Input Data\n- **Description**: {{ $('Loop Over Items3').item.json.desc }}\n- **Transcript**: {{ $json.text }}\n- **Play Count**: {{ $('Loop Over Items3').item.json.stats.playCount }}\n\n## Analysis Framework\n\n### Required Analysis Dimensions\n\n1. **Viral Hook & First 3 Seconds**\n   - Opening moment effectiveness for stopping scroll\n   - Visual and audio impact immediately\n   - Curiosity gap creation and intrigue\n   - Pattern interrupt and attention capture\n\n2. **TikTok Algorithm Optimization**\n   - Watch time and completion rate factors\n   - Engagement signal generation (comments, shares, saves)\n   - Trend participation and hashtag strategy\n   - Audio choice and trending sound usage\n\n3. **Content Pacing & Energy**\n   - Video rhythm and tempo matching TikTok style\n   - Information density and quick delivery\n   - Energy level and entertainment value\n   - Attention retention throughout duration\n\n4. **Authenticity & Relatability**\n   - Genuine personality and raw moments\n   - Universal experiences and emotions\n   - Gen Z/millennial cultural relevance\n   - Personal connection and vulnerability\n\n5. **Entertainment & Educational Balance**\n   - Fun factor and humor integration\n   - Learning value and quick tips\n   - Surprise elements and plot twists\n   - Memorable moments and quotability\n\n6. **Community & Participation**\n   - Comment-driving content and questions\n   - Duet and remix potential\n   - Challenge or trend creation ability\n   - User-generated content inspiration\n\n## Output Requirements\n\nProvide your analysis in this simplified JSON structure for easy Airtable mapping:\n\n{\n  \"tiktok_score\": \"number (1-100)\",\n  \"primary_strengths\": \"string (top 3 strengths with explanations of why they work for TikTok's unique audience and algorithm)\",\n  \"framework_1\": \"Framework Name: Brief description and key implementation step\",\n  \"framework_2\": \"Framework Name: Brief description and key implementation step\", \n  \"framework_3\": \"Framework Name: Brief description and key implementation step\"\n}\n\n## Framework Selection Guidelines\n\nChoose frameworks from these TikTok-specific categories based on the content analysis:\n\n### Viral Content Frameworks\n- **Hook-Deliver-Twist Pattern**: Strong opener, value delivery, unexpected ending\n- **Question-Journey-Answer Arc**: Curiosity creation, process showing, satisfying resolution\n- **Before-During-After Transformation**: Clear progression with dramatic change\n- **Trend-Remix-Amplify Strategy**: Popular trend participation with unique spin\n\n### Engagement Frameworks\n- **Controversy-Clarify-Community**: Hot take, explanation, discussion generation\n- **Personal-Universal-Relatable Flow**: Individual story with broad appeal\n- **Quick-Tip-Implementation Format**: Fast education with immediate application\n- **Challenge-Attempt-Result Structure**: Goal setting, process showing, outcome reveal\n\n### Entertainment Frameworks\n- **Comedy-Setup-Punchline Method**: Humor building with satisfying payoff\n- **Suspense-Build-Release Pattern**: Tension creation and dramatic resolution\n- **Random-Relatable-Memorable Mix**: Unexpected content that sticks\n- **Energy-Match-Amplify Approach**: High engagement with momentum building\n\n### Algorithm Optimization Frameworks\n- **Comment-Bait-Value Strategy**: Discussion starters with genuine worth\n- **Watch-Time-Maximizer Pattern**: Retention hooks throughout video\n- **Share-Worthy-Moment Creation**: Highly quotable or screenshot-able content\n- **Duet-Ready-Content Design**: Built for remixing and collaboration\n\n## TikTok-Specific Considerations\n\n### Content Performance Indicators\n- **Play Count Analysis**: \n  - Under 1K: Learning/testing phase\n  - 1K-10K: Moderate reach, room for optimization\n  - 10K-100K: Good performance, viral potential\n  - 100K+: High viral success, study for replication\n\n### Algorithm Factors\n- **First 3 Seconds**: Critical for algorithm promotion\n- **Completion Rate**: Full video watches boost distribution\n- **Engagement Velocity**: Quick likes/comments/shares matter most\n- **Trending Participation**: Audio, hashtags, effects usage\n- **Consistency**: Regular posting and style recognition\n\n### Audience Behavior Patterns\n- **Mobile-First**: Vertical format optimization essential\n- **Short Attention Spans**: Quick payoffs and instant gratification\n- **Authenticity Preference**: Raw, unpolished content often performs better\n- **Trend Cycling**: Fast-moving cultural moments and references\n- **Discovery Mode**: Algorithm-driven vs. follower-based reach\n\n### Content Categories That Perform\n- **Educational**: Quick tips, life hacks, tutorials\n- **Entertainment**: Comedy, skits, relatable content\n- **Trends**: Dances, challenges, viral audio usage\n- **Personal**: Day-in-life, behind-scenes, authentic moments\n- **Niche**: Specific interests with passionate communities\n\n## Additional Instructions\n\n1. **TikTok Score**: Rate 1-100 based on viral potential, algorithm optimization, and engagement mechanics specific to TikTok's unique ecosystem\n2. **Primary Strengths**: Identify the top 3 most impactful elements with brief explanations of why they work for TikTok's algorithm and young audience (e.g., \"Instant visual hook (stops scroll in first second), trending audio usage (algorithm boost), relatable Gen Z humor (drives shares)\")\n3. **Framework Format**: Each framework should be: \"Name: 1-2 sentence description + one key action step specific to TikTok's fast-paced environment\"\n4. **Concise Output**: Keep framework fields under 200 characters, primary strengths can be up to 300 characters for explanations\n5. **Algorithm Focus**: Prioritize watch time, engagement velocity, and viral mechanics over traditional marketing approaches\n\n## Play Count Context Analysis\n\nBased on play count, provide contextual insights:\n- **High Performance (100K+)**: Identify replicable viral elements\n- **Moderate Performance (10K-100K)**: Find optimization opportunities\n- **Growing Performance (1K-10K)**: Suggest algorithm-friendly improvements\n- **Learning Phase (<1K)**: Focus on fundamental TikTok best practices\n\n## Example Output Format:\n\n{\n  \"tiktok_score\": \"88\",\n  \"primary_strengths\": \"Immediate visual hook (grabs attention in first frame), trending audio integration (leverages algorithm boost), relatable Gen Z scenario (drives comments and shares through identification)\",\n  \"framework_1\": \"Hook-Deliver-Twist Pattern: Strong visual opener, educational content, surprise ending. Action: Start with bold statement or visual shock\",\n  \"framework_2\": \"Trend-Remix-Amplify Strategy: Uses popular sound with unique angle. Action: Add personal story to trending audio\",\n  \"framework_3\": \"Comment-Bait-Value Framework: Generates discussion while providing worth. Action: End with controversial but educational question\"\n}\n\n\n## Quality Checks\n\nBefore finalizing your response:\n- ✅ Analysis considers TikTok's young demographic and cultural context\n- ✅ Algorithm optimization factors are prioritized for maximum reach\n- ✅ Viral mechanics and entertainment value are evaluated\n- ✅ Frameworks focus on quick engagement and watch time retention\n- ✅ Play count performance is contextualized for actionable insights",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        2672,
        1008
      ],
      "id": "40547f7e-75f8-4fb7-a238-9ff34e59fb81",
      "name": "Basic LLM Chain3"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"tiktok_score\": \"number (1-100)\",\n  \"primary_strengths\": \"string (top 3 strengths with explanations of why they work for TikTok's unique audience and algorithm)\",\n  \"framework_1\": \"Framework Name: Brief description and key implementation step\",\n  \"framework_2\": \"Framework Name: Brief description and key implementation step\", \n  \"framework_3\": \"Framework Name: Brief description and key implementation step\"\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        2768,
        1232
      ],
      "id": "dab198cc-7aec-40fa-b751-311e4ef69672",
      "name": "Structured Output Parser3"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "app7GtQRtd1vnFEdW",
          "mode": "list",
          "cachedResultName": "Social Automation",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW"
        },
        "table": {
          "__rl": true,
          "value": "tbl0RiS6dwyWmEVwz",
          "mode": "list",
          "cachedResultName": "TikTok Ideas",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW/tbl0RiS6dwyWmEVwz"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Duration (sec)": "={{ $('Transcribe a recording').item.json.usage.seconds }}",
            "Post ID": "={{ $('Filter4').item.json.id }}",
            "User": "={{ $('Filter4').item.json.authorMeta.name }}",
            "Description": "={{ $('Filter4').item.json.text }}",
            "Transcript": "={{ $('Transcribe a recording').item.json.text }}",
            "TikTok Score": "={{ $json.output.tiktok_score }}",
            "Primary Strengths": "={{ $json.output.primary_strengths }}",
            "Framework 1": "={{ $json.output.framework_1 }}",
            "Framework 2": "={{ $json.output.framework_2 }}",
            "Framework 3": "={{ $json.output.framework_3 }}",
            "Play Count": "={{ $('Filter4').item.json.playCount }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Post ID",
              "displayName": "Post ID",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "User",
              "displayName": "User",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Play Count",
              "displayName": "Play Count",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Transcript",
              "displayName": "Transcript",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Duration (sec)",
              "displayName": "Duration (sec)",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "TikTok Score",
              "displayName": "TikTok Score",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Primary Strengths",
              "displayName": "Primary Strengths",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Framework 1",
              "displayName": "Framework 1",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Framework 2",
              "displayName": "Framework 2",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Framework 3",
              "displayName": "Framework 3",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        3072,
        1008
      ],
      "id": "16eafe3d-28f5-48b0-945b-67b49b1170ad",
      "name": "Create a record3",
      "credentials": {
        "airtableTokenApi": {
          "id": "zWLJcCryxTdKGkUW",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "command": "find /tmp -type f -delete"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        3296,
        1136
      ],
      "id": "49f75b62-9341-4ed9-a7ff-4a0079cbd34f",
      "name": "Execute Command1"
    },
    {
      "parameters": {
        "content": "## Tiktok Research",
        "height": 516,
        "width": 5160,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1696,
        960
      ],
      "typeVersion": 1,
      "id": "a11073f1-4927-4f4b-b3c2-fa3f3d50f298",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "command": "find /tmp -type f -delete"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -1616,
        1280
      ],
      "id": "75cdf976-ccce-4bb5-a620-2339f0d7645d",
      "name": "Clear Tmp Folder"
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "app7GtQRtd1vnFEdW",
          "mode": "list",
          "cachedResultName": "Social Automation",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW"
        },
        "table": {
          "__rl": true,
          "value": "tbl7UBjpcmrSOBJPu",
          "mode": "list",
          "cachedResultName": "Inspiration",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW/tbl7UBjpcmrSOBJPu"
        },
        "filterByFormula": "AND({Platform} = \"LinkedIn\", {Status} = \"Listening\")",
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        -1392,
        720
      ],
      "id": "d4a766bf-ec8d-4d58-8ef9-55c3a703ac00",
      "name": "Search records3",
      "credentials": {
        "airtableTokenApi": {
          "id": "zWLJcCryxTdKGkUW",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "simple": false,
        "filters": {
          "sender": "noreply+automations@airtableemail.com"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1.2,
      "position": [
        -1920,
        2752
      ],
      "id": "28be23d7-de9d-44ca-b79b-321c4bea7ea4",
      "name": "Gmail Trigger",
      "credentials": {
        "gmailOAuth2": {
          "id": "47wVmO3uPCdVj57K",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.text }}",
                    "rightValue": "**Post Type**: Carousel",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "7ce01921-c869-420e-ab44-707bd2acb1f5"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Instagram Carousel"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "43560a25-065d-475c-b8d4-5b3c8204fabf",
                    "leftValue": "={{ $json.text }}",
                    "rightValue": "**Post Type**: Reel",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Instagram Reel"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b8143bf1-5cf0-4f96-82ab-d56aa069c928",
                    "leftValue": "={{ $json.subject }}",
                    "rightValue": "LinkedIn Content Generation",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "LinkedIn"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "559ae578-e6db-43e3-bdbb-7776425c088d",
                    "leftValue": "={{ $json.subject }}",
                    "rightValue": "TikTok Content Generation",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "TikTok"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1664,
        2720
      ],
      "id": "b82a4ce0-dd3d-41ae-936b-c488a4cdb1c9",
      "name": "Switch1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.content_prompt }}",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -176,
        3088
      ],
      "id": "4d6f0366-6c37-4ef2-822d-8e7ef7f06aa4",
      "name": "Basic LLM Chain4"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "chatgpt-4o-latest",
          "mode": "list",
          "cachedResultName": "chatgpt-4o-latest"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        432,
        3376
      ],
      "id": "e2b0f491-487c-4ea0-837f-88dafd1a05f9",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "ybRg3lag38rmtn5D",
          "name": "Shab OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"linkedin_post\": \"string (complete ready-to-publish LinkedIn post content)\",\n  \"optimization_notes\": {\n    \"hook_effectiveness\": \"string (why the opening works for LinkedIn)\",\n    \"framework_implementation\": \"string (how the selected framework was applied)\",\n    \"professional_positioning\": \"string (authority/credibility elements included)\",\n    \"engagement_mechanics\": \"string (comment/share drivers and CTA strategy)\"\n  },\n  \"performance_predictions\": {\n    \"estimated_reach\": \"string (professional assessment of potential reach)\",\n    \"engagement_drivers\": \"string (top 3 elements likely to drive interaction)\",\n    \"improvement_suggestions\": \"string (optional tweaks for better performance)\"\n  },\n  \"image_generation_prompt\": \"string (detailed prompt for creating a professional LinkedIn image/graphic that supports the content)\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -32,
        3376
      ],
      "id": "fb6091f6-bc05-42d4-ab82-e3fb549ff0eb",
      "name": "Structured Output Parser4"
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "sendTo": "shabbir@shabbirnoor.com",
        "subject": "LinkedIn Post Approval",
        "message": "=Hi there,\n\nHere's the LinkedIn Post:\n{{ $json.output.linkedin_post }}\nHere's why it works:\n{{ $json.output.optimization_notes.hook_effectiveness }}\n\n{{ $json.output.optimization_notes.framework_implementation }}\n\n{{ $json.output.optimization_notes.professional_positioning }}\n\n{{ $json.output.optimization_notes.engagement_mechanics }}\n\nClick below to provide feedback",
        "responseType": "freeText",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        752,
        3088
      ],
      "id": "16a81851-481c-4e05-975b-bad96907f9b4",
      "name": "Send a message",
      "webhookId": "10ba86d2-ca32-442e-a669-3ce0a4fe18cf",
      "credentials": {
        "gmailOAuth2": {
          "id": "47wVmO3uPCdVj57K",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c0f6e399-ae66-4452-bfda-b4c1d4783d9d",
              "name": "=content_prompt",
              "value": "=# LinkedIn Content Generator Prompt  ## System Instructions You are an expert LinkedIn content strategist specializing in creating original professional content inspired by viral patterns. Your task is to generate a completely NEW and UNIQUE LinkedIn post that applies the successful frameworks and strategies from an analyzed viral post while making it entirely original and personalized for the user.  ## Input Analysis - Viral Content Inspiration {{ $json.text }}  ## Content Creation Approach  **CRITICAL: The original content above is INSPIRATION ONLY. You must create completely new, original content that:** - **Uses the same successful framework and structure**  - **Applies the identified viral strengths and patterns** - **Is 100% unique and original** (not a copy or close paraphrase) - **Reflects the user's voice and expertise** (not the original author's) - **Addresses similar professional pain points** but with fresh examples and insights  **DO NOT:** - Copy phrases, sentences, or specific examples from the original - Use the same statistics, numbers, or claims - Replicate the exact hook or call-to-action - Mirror the original author's personal story or credentials  **DO:** - Apply the same structural framework that made it viral - Use similar engagement mechanics and psychological triggers - Create new examples, statistics, and personal anecdotes - Develop original insights that serve the same professional audience  **Task**: Implement the selected framework exactly as described above. Follow the framework's specific structure, approach, and action steps to create content that maximizes the identified strengths while maintaining LinkedIn professional standards.  ## Content Generation Requirements  ### Output Format - JSON Structure:  {   \"linkedin_post\": \"string (complete ready-to-publish LinkedIn post content)\",   \"optimization_notes\": {     \"hook_effectiveness\": \"string (why the opening works for LinkedIn)\",     \"framework_implementation\": \"string (how the selected framework was applied)\",     \"professional_positioning\": \"string (authority/credibility elements included)\",     \"engagement_mechanics\": \"string (comment/share drivers and CTA strategy)\"   },   \"performance_predictions\": {     \"estimated_reach\": \"string (professional assessment of potential reach)\",     \"engagement_drivers\": \"string (top 3 elements likely to drive interaction)\",     \"improvement_suggestions\": \"string (optional tweaks for better performance)\"   },   \"image_generation_prompt\": \"string (detailed prompt for creating a professional LinkedIn image/graphic that supports the content)\" }  ### Image Generation Requirements: The `image_generation_prompt` should create a professional LinkedIn-appropriate visual that: - **Supports the main message** without repeating text verbatim - **Uses professional design elements** (clean typography, business colors, minimal design) - **Includes visual metaphors** that reinforce the framework approach - **Optimizes for LinkedIn feed** (square or landscape orientation) - **Maintains brand credibility** while being scroll-stopping - **Incorporates relevant icons/graphics** for the industry/topic - **Avoids text-heavy designs** (LinkedIn users read the post, not the image)  ### Image Prompt Structure: \"Create a professional LinkedIn post image featuring [visual concept] with [design elements]. Style: [clean/modern/corporate]. Color scheme: [professional colors]. Include [relevant icons/graphics]. Avoid: text overlays, cluttered design. Focus: [main visual metaphor that supports the post message].\"  ### Professional LinkedIn Standards: - **Tone**: Professional yet approachable, industry-expert voice (USER'S voice, not original author's) - **Length**: 1,300-2,000 characters for optimal LinkedIn performance - **Structure**: Use line breaks, bullet points, and emojis strategically - **Credibility**: Include NEW specific numbers, results, or insider insights (not from original) - **Value**: Provide genuine professional value with fresh perspective  ### Engagement Optimization: - **First 2 Lines**: Critical for feed visibility - make them compelling - **Social Proof**: Reference achievements, client results, or industry recognition - **Discussion Triggers**: Include elements that encourage professional commentary - **Share-Worthy**: Create content professionals want to share with their network - **Connection Building**: Foster genuine professional relationships  ### Framework-Specific Elements:  #### Problem-Insight-Solution: - Quantify the problem with specific costs/pain points - Provide unique industry insights - Present solution with clear ROI/benefits - Use professional authority to validate solution  #### Community-Discussion Starter: - Ask thought-provoking questions relevant to professional audience - Share controversial (but professional) takes on industry trends - Encourage sharing of professional experiences - Build community around shared professional challenges  #### Authority-Building Pattern: - Lead with impressive but believable achievements - Share insider knowledge that demonstrates expertise - Include specific metrics and results - Position as industry thought leader  ## Content Guidelines  ## Output Format Requirements  Generate a valid JSON response with all required fields populated. Ensure: 1. **linkedin_post** contains the complete, ready-to-publish content 2. **optimization_notes** provides detailed analysis of why the content works 3. **performance_predictions** offers realistic engagement expectations 4. **image_generation_prompt** creates a detailed, actionable prompt for AI image generation tools  The JSON must be properly formatted and ready for n8n workflow parsing.  ## Quality Checks  Before finalizing your response: - ✅ Selected framework is clearly implemented throughout the post - ✅ Content is 100% original and unique (no copying from viral inspiration) - ✅ Professional tone maintained while keeping engagement high - ✅ NEW specific numbers, results, or achievements included for credibility - ✅ Call-to-action aligns with the chosen framework approach - ✅ Content provides genuine professional value to LinkedIn audience - ✅ First two lines are compelling enough to stop professional scroll - ✅ Length is optimized for LinkedIn (1,300-2,000 characters) - ✅ Voice and perspective are distinctly different from the original viral post  ## Example Framework Application  **Opening Variations Based on Framework Type:** - **Problem-focused**: \"Most [target audience] struggle with [expensive problem]...\" - **Community-focused**: \"Unpopular opinion: [controversial industry take]...\" - **Authority-focused**: \"After [specific experience/results], I've learned...\" - **Question-focused**: \"What if I told you [surprising claim]...\"  Adapt your opening style to match the selected framework's approach and tone.  Create original content that professionals will save, share, and discuss while positioning YOU as a thought leader in your industry. The viral post is your blueprint for success patterns, but your content must be completely unique and authentically yours.",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -416,
        3088
      ],
      "id": "7d239b99-5965-4726-96bf-3e308c9d6e34",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "117d33a1-df4d-43fc-a89e-9643deb37734",
              "leftValue": "={{ $json.output.approved }}",
              "rightValue": "={{ $json.output.approved }}",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1392,
        3104
      ],
      "id": "601f4020-24b8-47eb-9584-870cc595421b",
      "name": "If"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ecd28bea-1423-4143-876f-e94b80717938",
              "name": "feedback",
              "value": "={{ $json.output.feedback }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1584,
        3184
      ],
      "id": "d2cdb383-708d-4097-9068-7bc7de19e565",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert at LinkedIn content creation. Here's an origianl post idea:\n\n{{ $('Basic LLM Chain4').item.json.output.linkedin_post }}\n\nHere's the image prompt:\n\n{{ $('Basic LLM Chain4').item.json.output.image_generation_prompt }}\n\nHere's the user feedback for the post: {{ $json.feedback }}\n\nRedo the post according to the user's feedback and output as JSON\n\n{\n\"linkedin_post\": \"xyz\",\n\"image_generation_prompt\": \"xyz\"\n}\n\n\n\n",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -224,
        2928
      ],
      "id": "edf0451d-2c8c-4a21-b0f1-fbadc44fc699",
      "name": "Basic LLM Chain5"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\"linkedin_post\": \"xyz\",\n\"image_generation_prompt\": \"xyz\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        288,
        3424
      ],
      "id": "6ad1b6f0-a336-4d7b-9a0f-20747e9dc99e",
      "name": "Structured Output Parser5"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d7f81157-1cbb-46a9-a709-a212eb7c1455",
              "name": "output",
              "value": "={{ $json.output }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        496,
        3088
      ],
      "id": "cd3915ed-427e-4d99-9a32-7c5f6707a168",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Here's the original content:\n{{ $('Edit Fields2').item.json.output.linkedin_post }}\n\n{{ $json.data.text }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=I have provided you with user feedback regarding a piece of content.\n\nDetermine whether the user has approved the content, and if not, determine the changes required by the user.\n\nOutput as JSON:\n\n{\n\"approved\": true or false, boolean\n\"feedback\": \"user feedback\"\n}"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        992,
        3104
      ],
      "id": "c9a9624b-2a6c-44eb-907e-e54157f60a23",
      "name": "Basic LLM Chain6"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"approved\": true,\n  \"feedback\": \"user feedback\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        992,
        3488
      ],
      "id": "4e608525-1b3b-402d-9b1a-ae1fcedc3191",
      "name": "Structured Output Parser6"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "app7GtQRtd1vnFEdW",
          "mode": "list",
          "cachedResultName": "Social Automation",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW"
        },
        "table": {
          "__rl": true,
          "value": "tblt1c7ai48HlRBEQ",
          "mode": "list",
          "cachedResultName": "Post Pipeline",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW/tblt1c7ai48HlRBEQ"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Platform": "LinkedIn",
            "Description or Caption": "={{ $('Edit Fields2').item.json.output.linkedin_post }}",
            "Image Prompt": "={{ $('Edit Fields2').item.json.output.image_generation_prompt }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Post",
              "displayName": "Post",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Platform",
              "displayName": "Platform",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Tiktok",
                  "value": "Tiktok"
                },
                {
                  "name": "Instagram",
                  "value": "Instagram"
                },
                {
                  "name": "LinkedIn",
                  "value": "LinkedIn"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Description or Caption",
              "displayName": "Description or Caption",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Carousel Content or Script",
              "displayName": "Carousel Content or Script",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Hashtags",
              "displayName": "Hashtags",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Image Prompt",
              "displayName": "Image Prompt",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        1696,
        3024
      ],
      "id": "d8466998-2442-413c-9eb2-11541426420c",
      "name": "Create a record4",
      "credentials": {
        "airtableTokenApi": {
          "id": "zWLJcCryxTdKGkUW",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.content_prompt }}",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -176,
        3792
      ],
      "id": "9798d4dd-3038-4685-a9a5-964504972427",
      "name": "Basic LLM Chain7"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "chatgpt-4o-latest",
          "mode": "list",
          "cachedResultName": "chatgpt-4o-latest"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        448,
        4080
      ],
      "id": "22e5eb6b-47b3-44f6-b297-fcd586f8f003",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "ybRg3lag38rmtn5D",
          "name": "Shab OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"tiktok_content\": {\n    \"duration\": \"string (optimal video length 15-60 seconds based on content)\",\n    \"content_theme\": \"string (core topic/theme adapted from viral inspiration)\",\n    \"script\": {\n      \"hook\": \"string (first 3 seconds - critical for algorithm and retention)\",\n      \"main_content\": \"string (core message delivery with timing notes 3-50s)\",\n      \"cta\": \"string (strong ending that drives action 50-60s)\"\n    },\n    \"visual_directions\": \"string (overall video approach and style guidance)\",\n\n    \"caption\": \"string (TikTok caption with hook, relatability, and engagement drivers)\",\n    \"hashtags\": \"string (20-30 strategic hashtags - trending, FYP, niche, and community)\"\n  },\n  \"optimization_notes\": {\n    \"hook_effectiveness\": \"string (why the first 3 seconds capture Gen Z attention and stop scroll)\",\n    \"framework_implementation\": \"string (how the selected framework drives the TikTok structure)\",\n    \"content_adaptation\": \"string (how the viral content theme was adapted while staying original)\",\n    \"retention_strategy\": \"string (specific elements that keep viewers watching to completion)\",\n    \"engagement_mechanics\": \"string (comment/share drivers, duet potential, trend participation)\"\n  },\n  \"thumbnail_generation_prompt\": \"string (detailed prompt for creating eye-catching TikTok cover image)\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        208,
        4176
      ],
      "id": "dc7a1073-3ee6-4794-86d1-4cd2b4a95eac",
      "name": "Structured Output Parser7"
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "sendTo": "shabbir@shabbirnoor.com",
        "subject": "TikTok Post Approval",
        "message": "=Hi there,\n\nHere's the TikTok Post:\n{{ $json.output.tiktok_content.content_theme }}\n\nScript:\n{{ $json.output.tiktok_content.script.hook }}\n{{ $json.output.tiktok_content.script.main_content }}\n{{ $json.output.tiktok_content.script.cta }}\n\nDescription:\n{{ $json.output.tiktok_content.caption }}\n\nHashtags\n{{ $json.output.tiktok_content.hashtags }}\n\nHere's why it works:\n{{ $json.output.optimization_notes.hook_effectiveness }}\n\n{{ $json.output.optimization_notes.framework_implementation }}\n\n{{ $json.output.optimization_notes.engagement_mechanics }}\n\n\nClick below to provide feedback",
        "responseType": "freeText",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        768,
        3792
      ],
      "id": "bc2989c2-cca7-460c-9b5d-b69daae6be59",
      "name": "Send a message1",
      "webhookId": "10ba86d2-ca32-442e-a669-3ce0a4fe18cf",
      "credentials": {
        "gmailOAuth2": {
          "id": "47wVmO3uPCdVj57K",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c0f6e399-ae66-4452-bfda-b4c1d4783d9d",
              "name": "=content_prompt",
              "value": "=# TikTok Content Generator Prompt\n\n## System Instructions\nYou are an expert TikTok content strategist specializing in creating original viral video content inspired by successful patterns. Your task is to generate a completely NEW and UNIQUE TikTok video that applies the successful frameworks, content themes, and viral elements from an analyzed viral post while making it entirely original and personalized for the user.\n\n## Input Analysis - Viral Content Inspiration\n{{ $json.text }}\n\n**Task**: Implement the selected framework exactly as described above. Follow the framework's specific structure, approach, and action steps to create a TikTok that maximizes the identified strengths while maintaining TikTok's fast-paced, authentic engagement standards.\n\n## Content Creation Approach\n\n**CRITICAL: The original content above is INSPIRATION for both FRAMEWORK and CONTENT THEME. You must create new, original content that:**\n- **Uses the same successful framework and structure** \n- **Maintains the core content theme and topic** that made it viral\n- **Applies similar psychological triggers and engagement mechanics**\n- **Is substantially different in execution** (new examples, different angle, fresh delivery)\n- **Reflects the user's voice and brand** (not the original creator's)\n- **Addresses the same audience need** but with original insights and approach\n\n**CONTENT SIMILARITY Guidelines:**\n- **Same topic/niche**: If original was about life hacks, yours should be about life hacks\n- **Similar value proposition**: If original revealed \"secret tricks\", yours could reveal \"hidden methods\"\n- **Same audience pain point**: Address the same underlying problem or desire\n- **Similar content format**: Educational, comedy, storytime, dance, etc.\n\n**EXECUTION DIFFERENCES Required:**\n- **New specific examples, situations, or scenarios**\n- **Different personal story or experience**\n- **Fresh angle or perspective on the same topic**\n- **Original script and delivery style**\n- **Unique visual approach and authentic personality**\n\n## TikTok Generation Requirements\n\n### Output Format - JSON Structure:\n{\n  \"tiktok_content\": {\n    \"duration\": \"string (optimal video length 15-60 seconds based on content)\",\n    \"content_theme\": \"string (core topic/theme adapted from viral inspiration)\",\n    \"script\": {\n      \"hook\": \"string (first 3 seconds - critical for algorithm and retention)\",\n      \"main_content\": \"string (core message delivery with timing notes 3-50s)\",\n      \"cta\": \"string (strong ending that drives action 50-60s)\"\n    },\n    \"visual_directions\": \"string (overall video approach and style guidance)\",\n\n    \"caption\": \"string (TikTok caption with hook, relatability, and engagement drivers)\",\n    \"hashtags\": \"string (20-30 strategic hashtags - trending, FYP, niche, and community)\"\n  },\n  \"optimization_notes\": {\n    \"hook_effectiveness\": \"string (why the first 3 seconds capture Gen Z attention and stop scroll)\",\n    \"framework_implementation\": \"string (how the selected framework drives the TikTok structure)\",\n    \"content_adaptation\": \"string (how the viral content theme was adapted while staying original)\",\n    \"retention_strategy\": \"string (specific elements that keep viewers watching to completion)\",\n    \"engagement_mechanics\": \"string (comment/share drivers, duet potential, trend participation)\"\n  },\n  \"thumbnail_generation_prompt\": \"string (detailed prompt for creating eye-catching TikTok cover image)\"\n}\n\n## TikTok Algorithm & Culture Guidelines\n\n### Algorithm Optimization Factors:\n- **First 3 Seconds**: Most critical for FYP (For You Page) algorithm promotion\n- **Completion Rate**: Full video watches signal high quality content\n- **Engagement Velocity**: Quick likes/comments/shares boost distribution massively\n- **Trending Participation**: Sounds, effects, hashtags currently popular\n- **Authenticity Over Polish**: Raw, genuine content often outperforms highly produced\n\n### TikTok Culture & Audience:\n- **Gen Z Primary**: Content must resonate with 16-24 year old mindset and humor\n- **Authenticity First**: Real, unfiltered moments perform better than perfect content\n- **Fast-Paced Consumption**: Attention spans are 2-3 seconds for initial hook\n- **Trend Cycles**: Content formats change rapidly, stay current\n- **Community Participation**: Content that inspires duets, stitches, responses\n\n### Content Structure Best Practices:\n\n#### 15-30 Second TikToks (Quick Content):\n- **0-3s**: Immediate hook with bold visual or statement\n- **3-20s**: Rapid value delivery or entertainment\n- **20-30s**: Strong ending that drives engagement\n\n#### 30-60 Second TikToks (Educational/Storytelling):\n- **0-3s**: Hook that promises specific value or entertainment\n- **3-25s**: Setup context, problem, or story development\n- **25-50s**: Solution delivery, climax, or key insights\n- **50-60s**: Clear call-to-action and engagement request\n\n### Viral TikTok Patterns:\n\n#### Educational/Life Hack TikToks:\n- \"Things they don't teach you in school\"\n- \"Life hacks that actually work\"\n- Quick tutorials or how-tos\n- \"POV: You just learned...\" format\n\n#### Entertainment/Relatable TikToks:\n- Relatable scenarios everyone experiences\n- Comedy skits or funny observations\n- \"Tell me you're [identity] without telling me\"\n- Day-in-the-life content with personality\n\n#### Trend Participation TikToks:\n- Dancing or movement to trending sounds\n- Dueting popular content with unique angle\n- Using trending effects creatively\n- Participating in challenges with personal twist\n\n### Audio Strategy for TikTok:\n- **Trending Sounds**: Essential for FYP algorithm boost\n- **Original Audio**: Can become viral sounds others use\n- **Sound Timing**: Match beats, drops, or sound cues with visual transitions\n- **Voiceover + Music**: Layered audio for education + entertainment\n- **Sound Effects**: Strategic use of popular sound effects for emphasis\n\n### Visual Direction Requirements:\nEach scene should specify:\n- **Authentic actions and genuine reactions** for relatability\n- **Props, outfits, or setting changes** for visual interest\n- **Facial expressions and body language** that match the vibe\n- **Text overlay timing and style** (TikTok font styles)\n- **Trending transition effects** or cuts that feel native to platform\n- **Mobile-first composition** optimized for vertical viewing\n\n### Engagement-Driving Elements:\n- **Questions**: \"What would you do?\" \"Am I the only one?\"\n- **Relatable Content**: \"POV:\", \"When you...\", \"That one friend who...\"\n- **Educational Value**: Quick tips, life hacks, little-known facts\n- **Controversy/Hot Takes**: Respectful opinions that spark discussion\n- **Community Building**: Content that makes viewers feel seen/understood\n\n### Thumbnail Generation Requirements:\nCreate a cover image that:\n- **Captures authentic moment** from the video\n- **Shows genuine facial expression** or key visual\n- **Uses bright, eye-catching composition** that pops on FYP\n- **Avoids overly polished look** (authenticity over perfection)\n- **Includes minimal text** (TikTok users want to watch, not read)\n- **Represents the energy** and vibe of the full video\n\n## Output Format Requirements\n\nGenerate a complete JSON response with:\n1. **Optimal duration** based on content complexity and TikTok best practices\n2. **Overall visual approach** with style guidance for authentic TikTok content\n3. **Content theme adaptation** that maintains viral appeal while being original\n4. **Strategic script** optimized for Gen Z attention spans and engagement\n5. **Algorithm-friendly elements** for maximum FYP potential\n6. **Authentic thumbnail prompt** for scroll-stopping cover image\n\nThe JSON must be properly formatted and ready for n8n workflow parsing and immediate video production.\n\n## Quality Checks\n\nBefore finalizing your response:\n- ✅ Selected framework is clearly implemented throughout the TikTok structure\n- ✅ Content maintains the viral theme while being 100% original in execution\n- ✅ First 3 seconds create immediate hook that stops Gen Z scroll\n- ✅ Visual approach feels authentic and native to TikTok culture\n- ✅ NEW examples, stories, or situations while keeping similar content value\n- ✅ Script flows naturally with high energy and relatability\n- ✅ Caption includes relatable hook and engagement drivers\n- ✅ Hashtag strategy balances trending FYP tags with niche community tags\n- ✅ Voice and execution reflect authentic personality, not copying original creator\n- ✅ Content provides similar value but through fresh, genuine perspective\n\nCreate an original TikTok that users will watch completely, engage with actively, and potentially duet or stitch while building authentic connection with Gen Z audience. The viral post is your blueprint for both content theme and success patterns, but your execution must be completely unique and authentically yours.",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -400,
        3792
      ],
      "id": "b8921099-4f28-4920-8e80-dc389b086463",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "117d33a1-df4d-43fc-a89e-9643deb37734",
              "leftValue": "={{ $json.output.approved }}",
              "rightValue": "={{ $json.output.approved }}",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1408,
        3808
      ],
      "id": "46880ad4-7751-46d3-a575-09f301db8e5d",
      "name": "If1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ecd28bea-1423-4143-876f-e94b80717938",
              "name": "feedback",
              "value": "={{ $json.output.feedback }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1600,
        3888
      ],
      "id": "97720797-42f6-495f-a0e6-6dffe874700d",
      "name": "Edit Fields4"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert at TikTok content creation. Here's an origianl post idea:\n\n{{ $('Basic LLM Chain7').item.json.output }}\n\nHere's the user feedback for the post: {{ $json.feedback }}\n\nRedo the post according to the user's feedback and output as JSON\n\n{\n  \"tiktok_content\": {\n    \"duration\": \"string (optimal video length 15-60 seconds based on content)\",\n    \"content_theme\": \"string (core topic/theme adapted from viral inspiration)\",\n    \"script\": {\n      \"hook\": \"string (first 3 seconds - critical for algorithm and retention)\",\n      \"main_content\": \"string (core message delivery with timing notes 3-50s)\",\n      \"cta\": \"string (strong ending that drives action 50-60s)\"\n    },\n    \"visual_directions\": \"string (overall video approach and style guidance)\",\n\n    \"caption\": \"string (TikTok caption with hook, relatability, and engagement drivers)\",\n    \"hashtags\": \"string (20-30 strategic hashtags - trending, FYP, niche, and community)\"\n  },\n  \"thumbnail_generation_prompt\": \"string (detailed prompt for creating eye-catching TikTok cover image)\"\n}\n\n\n",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -176,
        3632
      ],
      "id": "f2009d57-6ce4-4d6f-841b-98fc19fc16c7",
      "name": "Basic LLM Chain8"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"tiktok_content\": {\n    \"duration\": \"string (optimal video length 15-60 seconds based on content)\",\n    \"content_theme\": \"string (core topic/theme adapted from viral inspiration)\",\n    \"script\": {\n      \"hook\": \"string (first 3 seconds - critical for algorithm and retention)\",\n      \"main_content\": \"string (core message delivery with timing notes 3-50s)\",\n      \"cta\": \"string (strong ending that drives action 50-60s)\"\n    },\n    \"visual_directions\": \"string (overall video approach and style guidance)\",\n\n    \"caption\": \"string (TikTok caption with hook, relatability, and engagement drivers)\",\n    \"hashtags\": \"string (20-30 strategic hashtags - trending, FYP, niche, and community)\"\n  },\n  \"optimization_notes\": {\n    \"hook_effectiveness\": \"string (why the first 3 seconds capture Gen Z attention and stop scroll)\",\n    \"framework_implementation\": \"string (how the selected framework drives the TikTok structure)\",\n    \"content_adaptation\": \"string (how the viral content theme was adapted while staying original)\",\n    \"retention_strategy\": \"string (specific elements that keep viewers watching to completion)\",\n    \"engagement_mechanics\": \"string (comment/share drivers, duet potential, trend participation)\"\n  },\n  \"thumbnail_generation_prompt\": \"string (detailed prompt for creating eye-catching TikTok cover image)\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -112,
        4176
      ],
      "id": "74a721bf-5a0b-4296-af51-67d563f45333",
      "name": "Structured Output Parser8"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d7f81157-1cbb-46a9-a709-a212eb7c1455",
              "name": "output",
              "value": "={{ $json.output }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        512,
        3792
      ],
      "id": "a9d6b563-86a9-4616-8d0c-4631775704e5",
      "name": "Edit Fields5"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Here's the original content:\n\nScript\n{{ $('Edit Fields5').item.json.output.tiktok_content.script.hook }}\n{{ $('Edit Fields5').item.json.output.tiktok_content.script.main_content }}\n{{ $('Edit Fields5').item.json.output.tiktok_content.script.cta }}\n\nCaption\n{{ $('Edit Fields5').item.json.output.tiktok_content.caption }}\n\nhashtags\n{{ $('Edit Fields5').item.json.output.tiktok_content.hashtags }}\n\nUser feedback\n{{ $json.data.text }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=I have provided you with user feedback regarding a piece of content.\n\nDetermine whether the user has approved the content, and if not, determine the changes required by the user.\n\nOutput as JSON:\n\n{\n\"approved\": true or false, boolean\n\"feedback\": \"user feedback\"\n}"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1008,
        3808
      ],
      "id": "3eb8695a-4f61-4351-8d5b-c17e4f387d58",
      "name": "Basic LLM Chain9"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"approved\": true,\n  \"feedback\": \"user feedback\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1008,
        4192
      ],
      "id": "e10ea6a0-22a0-4546-a9e7-445291d3de57",
      "name": "Structured Output Parser9"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "app7GtQRtd1vnFEdW",
          "mode": "list",
          "cachedResultName": "Social Automation",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW"
        },
        "table": {
          "__rl": true,
          "value": "tblt1c7ai48HlRBEQ",
          "mode": "list",
          "cachedResultName": "Post Pipeline",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW/tblt1c7ai48HlRBEQ"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Platform": "Tiktok",
            "Description or Caption": "={{ $('Edit Fields5').item.json.output.tiktok_content.caption }}",
            "Image Prompt": "={{ $('Edit Fields5').item.json.output.thumbnail_generation_prompt }}",
            "Post": "={{ $('Edit Fields5').item.json.output.tiktok_content.content_theme }}: {{ $('Edit Fields5').item.json.output.tiktok_content.duration }}",
            "Carousel Content or Script": "={{ $('Edit Fields5').item.json.output.tiktok_content.script.hook }}\n{{ $('Edit Fields5').item.json.output.tiktok_content.script.main_content }}\n{{ $('Edit Fields5').item.json.output.tiktok_content.script.cta }}",
            "Hashtags": "={{ $('Edit Fields5').item.json.output.tiktok_content.hashtags }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Post",
              "displayName": "Post",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Platform",
              "displayName": "Platform",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Tiktok",
                  "value": "Tiktok"
                },
                {
                  "name": "Instagram",
                  "value": "Instagram"
                },
                {
                  "name": "LinkedIn",
                  "value": "LinkedIn"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Description or Caption",
              "displayName": "Description or Caption",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Carousel Content or Script",
              "displayName": "Carousel Content or Script",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Hashtags",
              "displayName": "Hashtags",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Image Prompt",
              "displayName": "Image Prompt",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        1712,
        3728
      ],
      "id": "c61a21ca-bd17-45f5-8439-b3de9a11f529",
      "name": "Create a record5",
      "credentials": {
        "airtableTokenApi": {
          "id": "zWLJcCryxTdKGkUW",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.content_prompt }}",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -192,
        1664
      ],
      "id": "a984bafd-efe8-4468-a6ae-756727e96390",
      "name": "Basic LLM Chain10"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "chatgpt-4o-latest",
          "mode": "list",
          "cachedResultName": "chatgpt-4o-latest"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        464,
        2032
      ],
      "id": "e6806ea9-399a-4bd7-a761-899092530a6f",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "ybRg3lag38rmtn5D",
          "name": "Shab OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"carousel_content\": {\n    \"slide_count\": \"number (optimal slide count 5-10 based on content depth)\",\n    \"slides\": [\n      {\n        \"slide_number\": 1,\n        \"visual_concept\": \"string (detailed description of visual elements, colors, layout)\",\n        \"text_overlay\": \"string (text that appears on the slide - mobile optimized)\",\n        \"design_notes\": \"string (fonts, colors, positioning, brand elements)\"\n      },\n      {\n        \"slide_number\": 2,\n        \"visual_concept\": \"string (visual description for slide 2)\",\n        \"text_overlay\": \"string (slide 2 text content)\",\n        \"design_notes\": \"string (design consistency notes)\"\n      }\n    ],\n    \"caption\": \"string (Instagram caption with hook, value, storytelling, and strong CTA)\",\n    \"hashtags\": \"string (30 strategic hashtags - mix of popular, niche, and community tags)\"\n  },\n  \"optimization_notes\": {\n    \"hook_effectiveness\": \"string (why slide 1 stops scrolling and creates curiosity)\",\n    \"framework_implementation\": \"string (how the selected framework flows across slides)\",\n    \"visual_flow\": \"string (how slides build progression and maintain swipe-through)\",\n    \"engagement_mechanics\": \"string (save/share drivers, comment triggers, follow motivators)\"\n  },\n  \"performance_predictions\": {\n    \"estimated_reach\": \"string (reach assessment based on viral patterns and engagement factors)\",\n    \"engagement_drivers\": \"string (top 3 elements most likely to drive saves, shares, comments)\",\n    \"completion_rate_factors\": \"string (specific elements that encourage full carousel swipe-through)\"\n  },\n  \"image_generation_prompts\": [\n    {\n      \"slide_number\": 1,\n      \"prompt\": \"string (detailed AI image generation prompt for slide 1)\"\n    },\n    {\n      \"slide_number\": 2,\n      \"prompt\": \"string (detailed AI image generation prompt for slide 2)\"\n    }\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -368,
        2000
      ],
      "id": "62ee453f-d9c9-42b0-81f6-d379b6cf9ac8",
      "name": "Structured Output Parser10"
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "sendTo": "shabbir@shabbirnoor.com",
        "subject": "Instagram Post Approval",
        "message": "=Hi there,\n\nHere's the Instagram Carousel:\n{{ $json.output.carousel_content.slides.map(slide => `Slide ${slide.slide_number}: ${slide.text_overlay}`).join('\\n') }}\n\nHere's the caption:\n{{ $json.output.carousel_content.caption }}\n\nHere's the hashtags:\n{{ $json.output.carousel_content.hashtags }}\n\nHere's why it works:\n{{ $json.output.optimization_notes.hook_effectiveness }}\n\n{{ $json.output.optimization_notes.framework_implementation }}\n\n{{ $json.output.optimization_notes.engagement_mechanics }}\n\nClick below to provide feedback",
        "responseType": "freeText",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        784,
        1664
      ],
      "id": "0a4dc4c6-15c5-4b53-9266-80f86819085f",
      "name": "Send a message2",
      "webhookId": "10ba86d2-ca32-442e-a669-3ce0a4fe18cf",
      "credentials": {
        "gmailOAuth2": {
          "id": "47wVmO3uPCdVj57K",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c0f6e399-ae66-4452-bfda-b4c1d4783d9d",
              "name": "=content_prompt",
              "value": "=# Instagram Carousel Generator Prompt\n\n## System Instructions\nYou are an expert Instagram carousel strategist specializing in creating original viral carousel content inspired by successful patterns. Your task is to generate a completely NEW and UNIQUE Instagram carousel that applies the successful frameworks and strategies from an analyzed viral post while making it entirely original and personalized for the user.\n\n## Input Analysis - Viral Content Inspiration\n{{ $json.text }}\n\n**Task**: Implement the selected framework exactly as described above. Follow the framework's specific structure, approach, and action steps to create a carousel that maximizes the identified strengths while maintaining Instagram's visual-first engagement standards.\n\n## Content Creation Approach\n\n**CRITICAL: The original content above is INSPIRATION ONLY. You must create completely new, original content that:**\n- **Uses the same successful framework and structure** \n- **Applies the identified viral strengths and patterns**\n- **Is 100% unique and original** (not a copy or close paraphrase)\n- **Reflects the user's voice and brand** (not the original creator's)\n- **Addresses similar audience pain points** but with fresh examples and insights\n\n**DO NOT:**\n- Copy phrases, sentences, or specific examples from the original\n- Use the same statistics, numbers, or claims\n- Replicate the exact hook or call-to-action\n- Mirror the original creator's personal story or credentials\n\n**DO:**\n- Apply the same structural framework that made it viral\n- Use similar engagement mechanics and psychological triggers\n- Create new examples, statistics, and personal anecdotes\n- Develop original insights that serve the same target audience\n\n## Carousel Generation Requirements\n\n### Output Format - JSON Structure:\n```json\n{\n  \"carousel_content\": {\n    \"slide_count\": \"number (optimal slide count 5-10 based on content depth)\",\n    \"slides\": [\n      {\n        \"slide_number\": 1,\n        \"visual_concept\": \"string (detailed description of visual elements, colors, layout)\",\n        \"text_overlay\": \"string (text that appears on the slide - mobile optimized)\",\n        \"design_notes\": \"string (fonts, colors, positioning, brand elements)\"\n      },\n      {\n        \"slide_number\": 2,\n        \"visual_concept\": \"string (visual description for slide 2)\",\n        \"text_overlay\": \"string (slide 2 text content)\",\n        \"design_notes\": \"string (design consistency notes)\"\n      }\n    ],\n    \"caption\": \"string (Instagram caption with hook, value, storytelling, and strong CTA)\",\n    \"hashtags\": \"string (30 strategic hashtags - mix of popular, niche, and community tags)\"\n  },\n  \"optimization_notes\": {\n    \"hook_effectiveness\": \"string (why slide 1 stops scrolling and creates curiosity)\",\n    \"framework_implementation\": \"string (how the selected framework flows across slides)\",\n    \"visual_flow\": \"string (how slides build progression and maintain swipe-through)\",\n    \"engagement_mechanics\": \"string (save/share drivers, comment triggers, follow motivators)\"\n  },\n  \"performance_predictions\": {\n    \"estimated_reach\": \"string (reach assessment based on viral patterns and engagement factors)\",\n    \"engagement_drivers\": \"string (top 3 elements most likely to drive saves, shares, comments)\",\n    \"completion_rate_factors\": \"string (specific elements that encourage full carousel swipe-through)\"\n  },\n  \"image_generation_prompts\": [\n    {\n      \"slide_number\": 1,\n      \"prompt\": \"string (detailed AI image generation prompt for slide 1)\"\n    },\n    {\n      \"slide_number\": 2,\n      \"prompt\": \"string (detailed AI image generation prompt for slide 2)\"\n    }\n  ]\n}\n```\n\n## Instagram Carousel Guidelines\n\n### Visual-First Design Standards:\n- **Mobile Optimization**: All text and visuals must be clear on small screens\n- **Scroll-Stopping Power**: Slide 1 must immediately capture attention in the feed\n- **Design Consistency**: Cohesive color scheme, fonts, and layout across all slides\n- **Text Hierarchy**: Large, bold headers with supporting smaller text\n- **Brand Recognition**: Consistent visual elements that build brand awareness\n\n### Carousel Flow Strategy:\n- **Slide 1**: Hook slide - creates curiosity gap, promises value, stops scroll\n- **Slides 2-X**: Value delivery - each slide builds on previous, progressive revelation\n- **Final Slide**: CTA slide - clear call-to-action, encourages engagement\n- **Swipe Motivation**: Each slide ends with intrigue for next slide\n\n### Content Structure Best Practices:\n- **5-7 slides**: Optimal for engagement and completion rates\n- **8-10 slides**: For comprehensive educational content\n- **Information Density**: One main concept per slide\n- **Text Readability**: Maximum 2-3 lines of large text per slide\n- **Visual Breaks**: Balance text-heavy and visual-heavy slides\n\n### Engagement Optimization:\n\n#### Save-Worthy Elements:\n- Educational value users want to reference later\n- Step-by-step guides or processes\n- Lists, tips, or actionable insights\n- Personal stories with universal lessons\n\n#### Share-Worthy Elements:\n- Relatable experiences that resonate broadly\n- Surprising statistics or little-known facts\n- Controversial but valuable perspectives\n- Inspirational or motivational content\n\n#### Comment-Driving Elements:\n- Questions that invite personal experiences\n- Polls or \"this or that\" scenarios\n- Requests for opinions or advice\n- Relatable situations that spark discussion\n\n### Image Generation Requirements:\nEach slide's image generation prompt should create visuals that:\n- **Match Instagram aesthetic** (bright, high-contrast, modern design)\n- **Support slide content** without repeating text verbatim\n- **Flow cohesively** from slide to slide with consistent branding\n- **Include strategic white space** for text overlay readability\n- **Use colors strategically** to guide attention and create visual hierarchy\n- **Incorporate relevant icons/graphics** that enhance understanding\n- **Avoid text-heavy designs** (text goes in overlay, not baked into image)\n\n### Image Prompt Structure Template:\n\"Create a modern Instagram carousel slide featuring [visual concept] with [specific design elements]. Style: [clean/bold/minimalist]. Color scheme: [specific colors that work with brand]. Layout: [composition notes]. Include: [relevant icons/graphics/photos]. Ensure: high contrast, mobile-optimized, space for text overlay. Avoid: cluttered design, hard-to-read elements.\"\n\n## Output Format Requirements\n\nGenerate a complete JSON response with:\n1. **Optimal slide count** based on content depth and framework requirements\n2. **All slides mapped out** with visual concepts and text overlays\n3. **Compelling caption** that works with carousel content\n4. **Strategic hashtag mix** for maximum reach and engagement\n5. **Detailed analysis** of why this carousel will perform well\n6. **Individual image prompts** for each slide that create cohesive visual flow\n\nThe JSON must be properly formatted and ready for n8n workflow parsing and immediate content creation execution.\n\n## Quality Checks\n\nBefore finalizing your response:\n- ✅ Selected framework is clearly implemented across the carousel progression\n- ✅ Content is 100% original and unique (no copying from viral inspiration)\n- ✅ Slide 1 creates immediate scroll-stopping impact and curiosity\n- ✅ Each slide builds logically on previous slides with clear progression\n- ✅ NEW examples, statistics, or insights included for authenticity\n- ✅ Text overlays are mobile-optimized and highly readable\n- ✅ Image generation prompts create cohesive visual branding\n- ✅ Caption includes strong hook, value delivery, and clear CTA\n- ✅ Hashtag strategy balances reach, relevance, and community engagement\n- ✅ Voice and approach are distinctly different from the original viral content\n\nCreate an original carousel that Instagram users will save, share, and swipe through completely while building authentic connection with your target audience. The viral post is your blueprint for success patterns, but your carousel must be completely unique and authentically yours.",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -432,
        1664
      ],
      "id": "29dd6177-25f5-4c25-8647-0e28d20dc1c3",
      "name": "Edit Fields6"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "117d33a1-df4d-43fc-a89e-9643deb37734",
              "leftValue": "={{ $json.output.approved }}",
              "rightValue": "={{ $json.output.approved }}",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1424,
        1680
      ],
      "id": "6b8e2f9a-bcb4-454c-b92c-bbb368a4f4e8",
      "name": "If2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ecd28bea-1423-4143-876f-e94b80717938",
              "name": "feedback",
              "value": "={{ $json.output.feedback }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1616,
        1760
      ],
      "id": "a7f3166a-8461-4c24-b3b7-38c976b5e35c",
      "name": "Edit Fields7"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert at Instagram Carousel content creation. Here's the original post idea:\n\n{{ $('Edit Fields8').item.json.output.carousel_content.slides.map(slide => `Slide ${slide.slide_number}: ${slide.text_overlay}`).join('\\n') }}\n\nCaption\n{{ $('Edit Fields8').item.json.output.carousel_content.caption }}\n\nHashtags\n{{ $('Edit Fields8').item.json.output.carousel_content.hashtags }}\n\n\nHere's the user feedback for the post: {{ $json.feedback }}\n\nRedo the post according to the user's feedback and output as JSON\n\n{\n  \"carousel_content\": {\n    \"slide_count\": \"number (optimal slide count 5-10 based on content depth)\",\n    \"slides\": [\n      {\n        \"slide_number\": 1,\n        \"visual_concept\": \"string (detailed description of visual elements, colors, layout)\",\n        \"text_overlay\": \"string (text that appears on the slide - mobile optimized)\",\n        \"design_notes\": \"string (fonts, colors, positioning, brand elements)\"\n      },\n      {\n        \"slide_number\": 2,\n        \"visual_concept\": \"string (visual description for slide 2)\",\n        \"text_overlay\": \"string (slide 2 text content)\",\n        \"design_notes\": \"string (design consistency notes)\"\n      }\n    ],\n    \"caption\": \"string (Instagram caption with hook, value, storytelling, and strong CTA)\",\n    \"hashtags\": \"string\"\n  }\n}\n\n\n\n\n",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -192,
        1504
      ],
      "id": "7af69d5f-acda-4492-816b-a3403a15c0d3",
      "name": "Basic LLM Chain11"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"carousel_content\": {\n    \"slide_count\": \"number (optimal slide count 5-10 based on content depth)\",\n    \"slides\": [\n      {\n        \"slide_number\": 1,\n        \"visual_concept\": \"string (detailed description of visual elements, colors, layout)\",\n        \"text_overlay\": \"string (text that appears on the slide - mobile optimized)\",\n        \"design_notes\": \"string (fonts, colors, positioning, brand elements)\"\n      },\n      {\n        \"slide_number\": 2,\n        \"visual_concept\": \"string (visual description for slide 2)\",\n        \"text_overlay\": \"string (slide 2 text content)\",\n        \"design_notes\": \"string (design consistency notes)\"\n      }\n    ],\n    \"caption\": \"string (Instagram caption with hook, value, storytelling, and strong CTA)\",\n    \"hashtags\": \"string\"\n  }\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        272,
        2032
      ],
      "id": "0dd25fa7-6488-40b8-8adc-2e7f4a6b0c0c",
      "name": "Structured Output Parser11"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a585c41b-83d8-42f1-840d-e5d4189f078f",
              "name": "output",
              "value": "={{ $json.output }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        480,
        1664
      ],
      "id": "ae7bcf10-f265-46f4-b067-4ebd5eecffef",
      "name": "Edit Fields8"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Here's the original content:\n\n{{ $('Edit Fields8').item.json.output.carousel_content.slides.map(slide => `Slide ${slide.slide_number}: ${slide.text_overlay}`).join('\\n') }}\n\nCaption\n{{ $('Edit Fields8').item.json.output.carousel_content.caption }}\n\nFeedback:\n\n{{ $json.data.text }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=I have provided you with user feedback regarding a piece of content.\n\nDetermine whether the user has approved the content, and if not, determine the changes required by the user.\n\nOutput as JSON:\n\n{\n\"approved\": true or false, boolean\n\"feedback\": \"user feedback\"\n}"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1024,
        1680
      ],
      "id": "f9413f12-1ae8-47c4-9fe1-9ce454ef40b1",
      "name": "Basic LLM Chain12"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"approved\": true,\n  \"feedback\": \"user feedback\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1024,
        2064
      ],
      "id": "14f6e6dd-1120-4f21-b36b-54fc4bb8fe0a",
      "name": "Structured Output Parser12"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "app7GtQRtd1vnFEdW",
          "mode": "list",
          "cachedResultName": "Social Automation",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW"
        },
        "table": {
          "__rl": true,
          "value": "tblt1c7ai48HlRBEQ",
          "mode": "list",
          "cachedResultName": "Post Pipeline",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW/tblt1c7ai48HlRBEQ"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Platform": "Instagram",
            "Description or Caption": "={{ $('Edit Fields8').item.json.output.carousel_content.caption }}",
            "Image Prompt": "=",
            "Hashtags": "={{ $('Edit Fields8').item.json.output.carousel_content.hashtags }}",
            "Carousel Content or Script": "={{ $('Edit Fields8').item.json.output.carousel_content.slides.map(slide => `Slide ${slide.slide_number}: ${slide.text_overlay}`).join('\\n') }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Post",
              "displayName": "Post",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Platform",
              "displayName": "Platform",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Tiktok",
                  "value": "Tiktok"
                },
                {
                  "name": "Instagram",
                  "value": "Instagram"
                },
                {
                  "name": "LinkedIn",
                  "value": "LinkedIn"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Description or Caption",
              "displayName": "Description or Caption",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Carousel Content or Script",
              "displayName": "Carousel Content or Script",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Hashtags",
              "displayName": "Hashtags",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Image Prompt",
              "displayName": "Image Prompt",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        1728,
        1600
      ],
      "id": "2d3f2e9e-95e2-4e90-8c98-8294a0103ba2",
      "name": "Create a record6",
      "credentials": {
        "airtableTokenApi": {
          "id": "zWLJcCryxTdKGkUW",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.content_prompt }}",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -160,
        2416
      ],
      "id": "1bf4274c-78ae-4e85-96d5-575502511644",
      "name": "Basic LLM Chain13"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "chatgpt-4o-latest",
          "mode": "list",
          "cachedResultName": "chatgpt-4o-latest"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        496,
        2704
      ],
      "id": "b515527c-273f-4571-b619-b81f5c82b98a",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "ybRg3lag38rmtn5D",
          "name": "Shab OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"reel_content\": {\n    \"duration\": \"string (optimal video length 15-30 seconds based on content)\",\n    \"content_theme\": \"string (core topic/theme adapted from viral inspiration)\",\n    \"script\": {\n      \"hook\": \"string (first 3 seconds - critical for retention and algorithm)\",\n      \"main_content\": \"string (core message delivery with timing notes 3-25s)\",\n      \"cta\": \"string (strong ending that drives action 25-30s)\"\n    },\n    \"visual_directions\": {\n      \"overall_style\": \"string (video aesthetic - trendy/professional/casual/aesthetic)\",\n      \"scenes\": [\n        {\n          \"timestamp\": \"0-3s\",\n          \"visual\": \"string (specific visual action, setting, props)\",\n          \"text_overlay\": \"string (on-screen text for this moment)\",\n          \"transition\": \"string (how to move to next scene - cut/zoom/slide)\"\n        },\n        {\n          \"timestamp\": \"3-8s\", \n          \"visual\": \"string (scene 2 visual description)\",\n          \"text_overlay\": \"string (text overlay for scene 2)\",\n          \"transition\": \"string (transition to scene 3)\"\n        }\n      ]\n    },\n    \"audio_suggestions\": {\n      \"style\": \"string (trending audio/original voiceover/music + voiceover)\",\n      \"mood\": \"string (energetic/calm/dramatic/upbeat/inspiring)\",\n      \"specific_recommendations\": \"string (trending sounds or original audio direction)\",\n      \"voiceover_notes\": \"string (tone, pace, emotion for spoken content)\"\n    },\n    \"caption\": \"string (Instagram caption with hook, context, value, and strong CTA)\",\n    \"hashtags\": \"string (30 strategic hashtags - trending, niche, and community mix)\"\n  },\n  \"optimization_notes\": {\n    \"hook_effectiveness\": \"string (why the first 3 seconds capture attention and stop scroll)\",\n    \"framework_implementation\": \"string (how the selected framework drives the reel structure)\",\n    \"content_adaptation\": \"string (how the viral content theme was adapted while staying original)\",\n    \"retention_strategy\": \"string (specific elements that keep viewers watching to completion)\",\n    \"engagement_mechanics\": \"string (comment/share drivers, algorithm optimization factors)\"\n  },\n\n  \"thumbnail_generation_prompt\": \"string (detailed prompt for creating eye-catching reel cover image)\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -336,
        2752
      ],
      "id": "d9673379-df65-4ba8-972d-1fb765e3312d",
      "name": "Structured Output Parser13"
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "sendTo": "shabbir@shabbirnoor.com",
        "subject": "Instagram Reel Approval",
        "message": "=Hi there,\n\nHere's the Instagram Reel Script:\n{{ $json.output.reel_content.script.hook }}\n{{ $json.output.reel_content.script.main_content }}\n{{ $json.output.reel_content.script.cta }}\n\nHere's the caption:\n{{ $json.output.reel_content.caption }}\n\nHashtags: \n{{ $json.output.reel_content.hashtags }}\n\nHere's why it works:\n{{ $json.output.optimization_notes.hook_effectiveness }}\n\n{{ $json.output.optimization_notes.framework_implementation }}\n\n{{ $json.output.optimization_notes.engagement_mechanics }}\n\nClick below to provide feedback",
        "responseType": "freeText",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        816,
        2416
      ],
      "id": "91ad122e-ae0b-486d-801d-bb0532994923",
      "name": "Send a message3",
      "webhookId": "10ba86d2-ca32-442e-a669-3ce0a4fe18cf",
      "credentials": {
        "gmailOAuth2": {
          "id": "47wVmO3uPCdVj57K",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c0f6e399-ae66-4452-bfda-b4c1d4783d9d",
              "name": "=content_prompt",
              "value": "=# Instagram Reel Generator Prompt\n\n## System Instructions\nYou are an expert Instagram Reel strategist specializing in creating original viral video content inspired by successful patterns. Your task is to generate a completely NEW and UNIQUE Instagram Reel that applies the successful frameworks, content themes, and viral elements from an analyzed viral post while making it entirely original and personalized for the user.\n\n## Input Analysis - Viral Content Inspiration\n{{ $json.text }}\n\n**Task**: Implement the selected framework exactly as described above. Follow the framework's specific structure, approach, and action steps to create a reel that maximizes the identified strengths while maintaining Instagram's video-first engagement standards.\n\n## Content Creation Approach\n\n**CRITICAL: The original content above is INSPIRATION for both FRAMEWORK and CONTENT THEME. You must create new, original content that:**\n- **Uses the same successful framework and structure** \n- **Maintains the core content theme and topic** that made it viral\n- **Applies similar psychological triggers and engagement mechanics**\n- **Is substantially different in execution** (new examples, different angle, fresh delivery)\n- **Reflects the user's voice and brand** (not the original creator's)\n- **Addresses the same audience need** but with original insights and approach\n\n**CONTENT SIMILARITY Guidelines:**\n- **Same topic/niche**: If original was about productivity, yours should be about productivity\n- **Similar value proposition**: If original taught \"5 ways to...\", yours could teach \"3 secrets to...\" \n- **Same audience pain point**: Address the same underlying problem or desire\n- **Similar content format**: Educational, entertainment, behind-the-scenes, etc.\n\n**EXECUTION DIFFERENCES Required:**\n- **New specific examples, statistics, or case studies**\n- **Different personal story or experience**\n- **Fresh angle or perspective on the same topic**\n- **Original script and delivery style**\n- **Unique visual approach and styling**\n\n## Reel Generation Requirements\n\n### Output Format - JSON Structure:\n{\n  \"reel_content\": {\n    \"duration\": \"string (optimal video length 15-30 seconds based on content)\",\n    \"content_theme\": \"string (core topic/theme adapted from viral inspiration)\",\n    \"script\": {\n      \"hook\": \"string (first 3 seconds - critical for retention and algorithm)\",\n      \"main_content\": \"string (core message delivery with timing notes 3-25s)\",\n      \"cta\": \"string (strong ending that drives action 25-30s)\"\n    },\n    \"audio_suggestions\": {\n      \"style\": \"string (trending audio/original voiceover/music + voiceover)\",\n      \"mood\": \"string (energetic/calm/dramatic/upbeat/inspiring)\",\n      \"specific_recommendations\": \"string (trending sounds or original audio direction)\",\n      \"voiceover_notes\": \"string (tone, pace, emotion for spoken content)\"\n    },\n    \"caption\": \"string (Instagram caption with hook, context, value, and strong CTA)\",\n    \"hashtags\": \"string (30 strategic hashtags - trending, niche, and community mix)\"\n  },\n  \"optimization_notes\": {\n    \"hook_effectiveness\": \"string (why the first 3 seconds capture attention and stop scroll)\",\n    \"framework_implementation\": \"string (how the selected framework drives the reel structure)\",\n    \"content_adaptation\": \"string (how the viral content theme was adapted while staying original)\",\n    \"retention_strategy\": \"string (specific elements that keep viewers watching to completion)\",\n    \"engagement_mechanics\": \"string (comment/share drivers, algorithm optimization factors)\"\n  },\n\n  \"thumbnail_generation_prompt\": \"string (detailed prompt for creating eye-catching reel cover image)\"\n}\n\n\n## Instagram Reels Guidelines\n\n### Algorithm Optimization Factors:\n- **First 3 Seconds**: Most critical for algorithm promotion and viewer retention\n- **Watch Time**: Complete video watches signal quality to algorithm\n- **Engagement Velocity**: Quick likes/comments/shares boost distribution\n- **Trending Elements**: Audio, hashtags, or content formats currently popular\n- **Original Content**: Instagram favors original over reposted content\n\n### Video Production Standards:\n- **Vertical Format**: 9:16 aspect ratio optimized for mobile consumption\n- **High Quality**: Clear visuals and audio, good lighting, stable footage\n- **Quick Cuts**: Fast-paced editing to maintain attention spans\n- **Visual Interest**: Movement, color changes, or visual hooks every 2-3 seconds\n- **Mobile Viewing**: Everything readable and visible on small screens\n\n### Content Structure Best Practices:\n\n#### 15-Second Reels (Quick Tips/Hooks):\n- **0-3s**: Immediate hook with bold claim or visual\n- **3-12s**: Rapid value delivery or entertainment\n- **12-15s**: Strong CTA or memorable ending\n\n#### 30-Second Reels (Educational/Storytelling):\n- **0-3s**: Hook that promises specific value\n- **3-15s**: Setup context or problem identification\n- **15-25s**: Solution delivery or key insights\n- **25-30s**: Clear call-to-action and engagement request\n\n### Viral Content Patterns:\n\n#### Educational Reels:\n- Quick tips or life hacks\n- Step-by-step tutorials\n- \"Things I wish I knew\" format\n- Myth-busting or fact-sharing\n\n#### Entertainment Reels:\n- Relatable scenarios or experiences\n- Trending challenges with personal twist\n- Behind-the-scenes content\n- Day-in-the-life glimpses\n\n#### Engagement-Driving Elements:\n- **Questions**: \"What would you do?\" \"Have you tried this?\"\n- **Controversy**: Respectful hot takes that spark discussion\n- **Relatability**: \"POV: When you...\" or \"Tell me you... without telling me\"\n- **Value**: Actionable advice people want to save and share\n\n### Audio Strategy:\n- **Trending Sounds**: Use popular audio for algorithm boost\n- **Original Audio**: Creates unique content that others might use\n- **Voiceover + Music**: Layered audio for both entertainment and education\n- **Sound Quality**: Clear audio is critical for retention\n\n### Visual Direction Requirements:\nEach scene should specify:\n- **Specific actions or movements** for visual interest\n- **Props, settings, or background elements** needed\n- **Text overlay timing and content** for key messages\n- **Transition style** to maintain flow and momentum\n- **Lighting and composition** notes for professional quality\n\n### Thumbnail Generation Requirements:\nCreate a cover image that:\n- **Stops scroll immediately** with bold, eye-catching design\n- **Communicates value** at a glance without audio\n- **Shows faces or emotions** when relevant (higher engagement)\n- **Includes minimal text** (1-3 words max)\n- **Uses bright, high-contrast colors** that pop in the feed\n- **Optimizes for small mobile screens** (clear, simple composition)\n\n## Output Format Requirements\n\nGenerate a complete JSON response with:\n1. **Optimal duration** based on content complexity and framework\n2. **Scene-by-scene breakdown** with specific visual and audio directions\n3. **Content theme adaptation** that maintains viral appeal while being original\n4. **Algorithm-friendly elements** for maximum reach potential\n5. **Professional thumbnail prompt** for scroll-stopping cover image\n\nThe JSON must be properly formatted and ready for n8n workflow parsing and immediate video production.\n\n## Quality Checks\n\nBefore finalizing your response:\n- ✅ Selected framework is clearly implemented throughout the reel structure\n- ✅ Content maintains the viral theme while being 100% original in execution\n- ✅ First 3 seconds create immediate hook and retention\n- ✅ Visual directions are specific enough for video production\n- ✅ NEW examples, stories, or insights while keeping similar content value\n- ✅ Script flows naturally and maintains energy throughout\n- ✅ Audio suggestions align with current Instagram trends\n- ✅ Caption includes strong hook and clear call-to-action\n- ✅ Hashtag strategy balances trending and niche tags\n- ✅ Voice and execution are distinctly different from original viral content\n- ✅ Content provides similar value but through fresh perspective and approach\n\nCreate an original reel that Instagram users will watch completely, engage with actively, and share widely while building authentic connection with your target audience. The viral post is your blueprint for both content theme and success patterns, but your execution must be completely unique and authentically yours.",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -352,
        2416
      ],
      "id": "42243832-57b0-402c-921f-fbe329a1836f",
      "name": "Edit Fields9"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "117d33a1-df4d-43fc-a89e-9643deb37734",
              "leftValue": "={{ $json.output.approved }}",
              "rightValue": "={{ $json.output.approved }}",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1456,
        2432
      ],
      "id": "2863619f-137d-4497-8eb4-bbfb18c788fa",
      "name": "If3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ecd28bea-1423-4143-876f-e94b80717938",
              "name": "feedback",
              "value": "={{ $json.output.feedback }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1648,
        2512
      ],
      "id": "4da18b5f-11dc-4bcd-888e-15af98a13cc1",
      "name": "Edit Fields10"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert at Instagram content creation. Here's an origianl script idea:\n\nHook: {{ $('Edit Fields11').item.json.output.reel_content.script.hook }}\nContent: {{ $('Edit Fields11').item.json.output.reel_content.script.main_content }}\nCTA: {{ $('Edit Fields11').item.json.output.reel_content.script.cta }}\n\nCaption: {{ $('Edit Fields11').item.json.output.reel_content.caption }}\n\nHashtags: {{ $('Edit Fields11').item.json.output.reel_content.hashtags }}\n\nThumb: {{ $('Edit Fields11').item.json.output.thumbnail_generation_prompt }}\n\nAudio:\n{{ $('Edit Fields11').item.json.output.reel_content.audio_suggestions.style }}\n{{ $('Edit Fields11').item.json.output.reel_content.audio_suggestions.mood }}\n{{ $('Edit Fields11').item.json.output.reel_content.audio_suggestions.specific_recommendations }}\n{{ $('Edit Fields11').item.json.output.reel_content.audio_suggestions.voiceover_notes }}\n\nHere's the user feedback for the post: {{ $json.feedback }}\n\nRedo the post according to the user's feedback and output as JSON\n\n{\n  \"reel_content\": {\n    \"duration\": \"string (optimal video length 15-30 seconds based on content)\",\n    \"content_theme\": \"string (core topic/theme adapted from viral inspiration)\",\n    \"script\": {\n      \"hook\": \"string (first 3 seconds - critical for retention and algorithm)\",\n      \"main_content\": \"string (core message delivery with timing notes 3-25s)\",\n      \"cta\": \"string (strong ending that drives action 25-30s)\"\n    },\n    \"audio_suggestions\": {\n      \"style\": \"string (trending audio/original voiceover/music + voiceover)\",\n      \"mood\": \"string (energetic/calm/dramatic/upbeat/inspiring)\",\n      \"specific_recommendations\": \"string (trending sounds or original audio direction)\",\n      \"voiceover_notes\": \"string (tone, pace, emotion for spoken content)\"\n    },\n    \"caption\": \"string (Instagram caption with hook, context, value, and strong CTA)\",\n    \"hashtags\": \"string (30 strategic hashtags - trending, niche, and community mix)\"\n  },\n\n  \"thumbnail_generation_prompt\": \"string (detailed prompt for creating eye-catching reel cover image)\"\n}\n\n",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -160,
        2256
      ],
      "id": "82754474-65d8-4553-beb3-940da09ff0c4",
      "name": "Basic LLM Chain14"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"reel_content\": {\n    \"duration\": \"string (optimal video length 15-30 seconds based on content)\",\n    \"content_theme\": \"string (core topic/theme adapted from viral inspiration)\",\n    \"script\": {\n      \"hook\": \"string (first 3 seconds - critical for retention and algorithm)\",\n      \"main_content\": \"string (core message delivery with timing notes 3-25s)\",\n      \"cta\": \"string (strong ending that drives action 25-30s)\"\n    },\n    \"audio_suggestions\": {\n      \"style\": \"string (trending audio/original voiceover/music + voiceover)\",\n      \"mood\": \"string (energetic/calm/dramatic/upbeat/inspiring)\",\n      \"specific_recommendations\": \"string (trending sounds or original audio direction)\",\n      \"voiceover_notes\": \"string (tone, pace, emotion for spoken content)\"\n    },\n    \"caption\": \"string (Instagram caption with hook, context, value, and strong CTA)\",\n    \"hashtags\": \"string (30 strategic hashtags - trending, niche, and community mix)\"\n  },\n\n  \"thumbnail_generation_prompt\": \"string (detailed prompt for creating eye-catching reel cover image)\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        304,
        2768
      ],
      "id": "1de59452-6b95-4932-a60b-c3e124bcb529",
      "name": "Structured Output Parser14"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d7f81157-1cbb-46a9-a709-a212eb7c1455",
              "name": "output",
              "value": "={{ $json.output }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        560,
        2416
      ],
      "id": "25d0d41e-85f4-4000-a60a-14f092364857",
      "name": "Edit Fields11"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Here's the original content:\n{{ $('Edit Fields11').item.json.output.linkedin_post }}\n\n{{ $json.data.text }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=I have provided you with user feedback regarding a piece of content.\n\nDetermine whether the user has approved the content, and if not, determine the changes required by the user.\n\nOutput as JSON:\n\n{\n\"approved\": true or false, boolean\n\"feedback\": \"user feedback\"\n}"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1056,
        2432
      ],
      "id": "61addab7-056c-4821-941d-4898152dbc23",
      "name": "Basic LLM Chain15"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"approved\": true,\n  \"feedback\": \"user feedback\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1056,
        2816
      ],
      "id": "96a38c6b-9c5b-43b9-b285-377d58c693e5",
      "name": "Structured Output Parser15"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "app7GtQRtd1vnFEdW",
          "mode": "list",
          "cachedResultName": "Social Automation",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW"
        },
        "table": {
          "__rl": true,
          "value": "tblt1c7ai48HlRBEQ",
          "mode": "list",
          "cachedResultName": "Post Pipeline",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW/tblt1c7ai48HlRBEQ"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Platform": "Instagram",
            "Description or Caption": "={{ $('Edit Fields11').item.json.output.reel_content.caption }}",
            "Image Prompt": "={{ $('Edit Fields11').item.json.output.thumbnail_generation_prompt }}",
            "Post": "={{ $('Edit Fields11').item.json.output.reel_content.content_theme }}: {{ $('Edit Fields11').item.json.output.reel_content.duration }}",
            "Hashtags": "={{ $('Edit Fields11').item.json.output.reel_content.hashtags }}",
            "Carousel Content or Script": "={{ $('Edit Fields11').item.json.output.reel_content.script.hook}}\n{{ $('Edit Fields11').item.json.output.reel_content.script.main_content }}\n{{ $('Edit Fields11').item.json.output.reel_content.script.cta }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "Post",
              "displayName": "Post",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Platform",
              "displayName": "Platform",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Tiktok",
                  "value": "Tiktok"
                },
                {
                  "name": "Instagram",
                  "value": "Instagram"
                },
                {
                  "name": "LinkedIn",
                  "value": "LinkedIn"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Description or Caption",
              "displayName": "Description or Caption",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Carousel Content or Script",
              "displayName": "Carousel Content or Script",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Hashtags",
              "displayName": "Hashtags",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Image Prompt",
              "displayName": "Image Prompt",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        1760,
        2352
      ],
      "id": "49f727a0-cb7c-4825-bebb-e0cf966314c9",
      "name": "Create a record7",
      "credentials": {
        "airtableTokenApi": {
          "id": "zWLJcCryxTdKGkUW",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "messageId": "={{ $('Gmail Trigger').item.json.id }}"
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1920,
        3728
      ],
      "id": "ddfd749b-2e3f-4171-96c9-ab880cd4ecf0",
      "name": "Delete a message",
      "webhookId": "fb03b079-7b13-46c5-add0-50bcee6ee902",
      "credentials": {
        "gmailOAuth2": {
          "id": "47wVmO3uPCdVj57K",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "messageId": "={{ $('Gmail Trigger').item.json.id }}"
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1888,
        3024
      ],
      "id": "188b4d25-0fa4-4cba-9f8d-9af9b8c9885e",
      "name": "Delete a message1",
      "webhookId": "fb03b079-7b13-46c5-add0-50bcee6ee902",
      "credentials": {
        "gmailOAuth2": {
          "id": "47wVmO3uPCdVj57K",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "messageId": "={{ $('Gmail Trigger').item.json.id }}"
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1968,
        2368
      ],
      "id": "7325b188-df51-4006-b7e6-c9cc04a637f4",
      "name": "Delete a message2",
      "webhookId": "fb03b079-7b13-46c5-add0-50bcee6ee902",
      "credentials": {
        "gmailOAuth2": {
          "id": "47wVmO3uPCdVj57K",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "messageId": "={{ $('Gmail Trigger').item.json.id }}"
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1936,
        1600
      ],
      "id": "30993d0e-e6f1-40ae-b75a-b1a763100ab1",
      "name": "Delete a message3",
      "webhookId": "fb03b079-7b13-46c5-add0-50bcee6ee902",
      "credentials": {
        "gmailOAuth2": {
          "id": "47wVmO3uPCdVj57K",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -2800,
        560
      ],
      "id": "24e48793-1dc3-491e-93a1-15919bac63c7",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "operation": "Run actor",
        "actorId": {
          "__rl": true,
          "value": "5QnEH5N71IK2mFLrP",
          "mode": "list",
          "cachedResultName": "Linkedin Posts Search Scraper | No Cookies",
          "cachedResultUrl": "https://console.apify.com/actors/5QnEH5N71IK2mFLrP/input"
        },
        "customBody": "={\n    \"date_filter\": \"past-week\",\n    \"keyword\": \"{{ $json['Keyword or User'] }}\",\n    \"limit\": 50\n}"
      },
      "type": "@apify/n8n-nodes-apify.apify",
      "typeVersion": 1,
      "position": [
        -1152,
        720
      ],
      "id": "aa54c855-99a1-4eed-a079-d256d0488f13",
      "name": "Run an Actor",
      "credentials": {
        "apifyApi": {
          "id": "dOvxG4L7tQy6NUZw",
          "name": "Apify account"
        }
      }
    },
    {
      "parameters": {
        "resource": "Actor runs",
        "operation": "Get run",
        "runId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        }
      },
      "type": "@apify/n8n-nodes-apify.apify",
      "typeVersion": 1,
      "position": [
        -944,
        720
      ],
      "id": "6236500f-66e1-43b7-aee5-a406fa44a08e",
      "name": "Get run2",
      "credentials": {
        "apifyApi": {
          "id": "dOvxG4L7tQy6NUZw",
          "name": "Apify account"
        }
      }
    },
    {
      "parameters": {
        "resource": "Datasets",
        "operation": "Get items",
        "datasetId": "={{ $json.defaultDatasetId }}"
      },
      "type": "@apify/n8n-nodes-apify.apify",
      "typeVersion": 1,
      "position": [
        -448,
        720
      ],
      "id": "564c9caa-8603-410b-aaa3-a6ab93a764e6",
      "name": "Get dataset items",
      "credentials": {
        "apifyApi": {
          "id": "dOvxG4L7tQy6NUZw",
          "name": "Apify account"
        }
      }
    },
    {
      "parameters": {
        "operation": "Run actor",
        "actorId": {
          "__rl": true,
          "value": "GdWCkxBtKWOsKjdch",
          "mode": "list",
          "cachedResultName": "TikTok Scraper",
          "cachedResultUrl": "https://console.apify.com/actors/GdWCkxBtKWOsKjdch/input"
        },
        "customBody": "={\n    \"excludePinnedPosts\": false,\n    \"proxyCountryCode\": \"None\",\n    \"resultsPerPage\": 25,\n    \"scrapeRelatedVideos\": false,\n    \"searchQueries\": [\n        \"{{ $json['Keyword or User'] }}\"\n    ],\n    \"searchSection\": \"/video\",\n    \"shouldDownloadAvatars\": false,\n    \"shouldDownloadCovers\": false,\n    \"shouldDownloadMusicCovers\": false,\n    \"shouldDownloadSlideshowImages\": false,\n    \"shouldDownloadSubtitles\": false,\n    \"shouldDownloadVideos\": false\n}"
      },
      "type": "@apify/n8n-nodes-apify.apify",
      "typeVersion": 1,
      "position": [
        -1152,
        1136
      ],
      "id": "8ddbdb8e-0080-4d99-beb9-142ea2a1d97b",
      "name": "Run an Actor1",
      "credentials": {
        "apifyApi": {
          "id": "dOvxG4L7tQy6NUZw",
          "name": "Apify account"
        }
      }
    },
    {
      "parameters": {
        "resource": "Actor runs",
        "operation": "Get run",
        "runId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        }
      },
      "type": "@apify/n8n-nodes-apify.apify",
      "typeVersion": 1,
      "position": [
        -928,
        1136
      ],
      "id": "8f6bb119-bcba-4b3d-9eac-4b88b9f04638",
      "name": "Get run3",
      "credentials": {
        "apifyApi": {
          "id": "dOvxG4L7tQy6NUZw",
          "name": "Apify account"
        }
      }
    },
    {
      "parameters": {
        "resource": "Datasets",
        "operation": "Get items",
        "datasetId": "={{ $json.defaultDatasetId }}"
      },
      "type": "@apify/n8n-nodes-apify.apify",
      "typeVersion": 1,
      "position": [
        -544,
        1136
      ],
      "id": "9538a1f9-eb8f-4708-8b8c-51884f76b61d",
      "name": "Get dataset items1",
      "credentials": {
        "apifyApi": {
          "id": "dOvxG4L7tQy6NUZw",
          "name": "Apify account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7bbcecb4-03c4-4a75-8fb3-8d2d4c822ebe",
              "leftValue": "={{ $json.status }}",
              "rightValue": "SUCCEEDED",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -736,
        720
      ],
      "id": "7fdfe642-d267-4a57-84e2-93c33dc7d6b4",
      "name": "If4"
    },
    {
      "parameters": {
        "amount": 20
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -592,
        848
      ],
      "id": "e52b73a2-ff7d-458b-b272-37e5407b9bf7",
      "name": "Wait",
      "webhookId": "d0951472-9167-4b05-9df6-7bd5230e18d0"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7bbcecb4-03c4-4a75-8fb3-8d2d4c822ebe",
              "leftValue": "={{ $json.status }}",
              "rightValue": "SUCCEEDED",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -736,
        1168
      ],
      "id": "ac01f155-52d2-4748-9ede-c04427e844e9",
      "name": "If5"
    },
    {
      "parameters": {
        "amount": 20
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -592,
        1296
      ],
      "id": "77b2f584-bbba-4ebc-9004-8442d25f23db",
      "name": "Wait1",
      "webhookId": "d0951472-9167-4b05-9df6-7bd5230e18d0"
    }
  ],
  "connections": {
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Search records",
            "type": "main",
            "index": 0
          },
          {
            "node": "Search records3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Search records2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search records": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Filter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter1": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Create a record",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Create a record": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze image": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request4": {
      "main": [
        [
          {
            "node": "Analyze image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain1": {
      "main": [
        [
          {
            "node": "Create a record1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Basic LLM Chain2",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Basic LLM Chain3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Create a record1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter2": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain2": {
      "main": [
        [
          {
            "node": "Create a record2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser2": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain2",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Create a record2": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [],
        [
          {
            "node": "Basic LLM Chain2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search records2": {
      "main": [
        [
          {
            "node": "Run an Actor1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request7": {
      "main": [
        [
          {
            "node": "HTTP Request8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "HTTP Request7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter4": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter5": {
      "main": [
        [
          {
            "node": "Filter4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request8": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk1": {
      "main": [
        [
          {
            "node": "Execute Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk2": {
      "main": [
        [
          {
            "node": "Transcribe a recording",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe a recording": {
      "main": [
        [
          {
            "node": "Basic LLM Chain3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain3": {
      "main": [
        [
          {
            "node": "Create a record3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser3": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain3",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Create a record3": {
      "main": [
        [
          {
            "node": "Execute Command1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command1": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search records3": {
      "main": [
        [
          {
            "node": "Run an Actor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain4": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain4",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Basic LLM Chain5",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Basic LLM Chain6",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser4": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain4",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Send a message": {
      "main": [
        [
          {
            "node": "Basic LLM Chain6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Basic LLM Chain4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Create a record4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Basic LLM Chain5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain5": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser5": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain5",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain6": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser6": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain6",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Create a record4": {
      "main": [
        [
          {
            "node": "Delete a message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain7": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain7",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Basic LLM Chain8",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Basic LLM Chain9",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser7": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain7",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Send a message1": {
      "main": [
        [
          {
            "node": "Basic LLM Chain9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Basic LLM Chain7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Create a record5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Basic LLM Chain8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain8": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser8": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain8",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Send a message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain9": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser9": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain9",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Create a record5": {
      "main": [
        [
          {
            "node": "Delete a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain10": {
      "main": [
        [
          {
            "node": "Edit Fields8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain10",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Basic LLM Chain11",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Basic LLM Chain12",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser10": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain10",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Send a message2": {
      "main": [
        [
          {
            "node": "Basic LLM Chain12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "Basic LLM Chain10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Create a record6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields7": {
      "main": [
        [
          {
            "node": "Basic LLM Chain11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain11": {
      "main": [
        [
          {
            "node": "Edit Fields8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser11": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain11",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields8": {
      "main": [
        [
          {
            "node": "Send a message2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain12": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser12": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain12",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Create a record6": {
      "main": [
        [
          {
            "node": "Delete a message3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain13": {
      "main": [
        [
          {
            "node": "Edit Fields11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain13",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Basic LLM Chain14",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Basic LLM Chain15",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser13": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain13",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Send a message3": {
      "main": [
        [
          {
            "node": "Basic LLM Chain15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields9": {
      "main": [
        [
          {
            "node": "Basic LLM Chain13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Create a record7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields10": {
      "main": [
        [
          {
            "node": "Basic LLM Chain14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain14": {
      "main": [
        [
          {
            "node": "Edit Fields11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser14": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain14",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields11": {
      "main": [
        [
          {
            "node": "Send a message3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain15": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser15": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain15",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Create a record7": {
      "main": [
        [
          {
            "node": "Delete a message2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Search records",
            "type": "main",
            "index": 0
          },
          {
            "node": "Search records3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Search records2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Run an Actor": {
      "main": [
        [
          {
            "node": "Get run2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get run2": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get dataset items": {
      "main": [
        [
          {
            "node": "Filter2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Run an Actor1": {
      "main": [
        [
          {
            "node": "Get run3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get run3": {
      "main": [
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get dataset items1": {
      "main": [
        [
          {
            "node": "Filter5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Get dataset items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Get run2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [
          {
            "node": "Get dataset items1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Get run3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "f8d903bf41171a711206c3bb74b40015823841bf2b93e148da68e764370f1965"
  }
}
